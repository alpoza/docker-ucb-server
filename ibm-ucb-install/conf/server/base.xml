<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
<!--
- Licensed Materials - Property of IBM Corp.
- IBM UrbanCode Build
- (c) Copyright IBM Corporation 2012, 2014. All Rights Reserved.
-
- U.S. Government Users Restricted Rights - Use, duplication or disclosure restricted by
- GSA ADP Schedule Contract with IBM Corp.
-->

<beans>
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="location"><value>classpath:installed.properties</value></property>
      <property name="ignoreUnresolvablePlaceholders" value="false"/><!-- fail on unresolved ${} token -->
      <property name="order" value="0"/>
      <property name="properties">
        <props>
          <prop key="install.server.db.maxActive">120</prop>
          <prop key="install.server.db.maxIdle">100</prop>
          <prop key="install.server.db.minIdle">20</prop>
          <prop key="install.server.db.connectionProperties"></prop>
        </props>
    </property>
  </bean>

  <!-- underlying database connection prototype configuration: NOT A SINGLETON -->
  <bean id="dataSourceTemplate" class="com.urbancode.ubuild.persistence.UBuildUnitOfWorkDataSource" scope="prototype"
        destroy-method="close">
    <property name="driverClassName">
      <value>${install.server.db.driver}</value>
    </property>
    <property name="url">
      <value>${install.server.db.url}</value>
    </property>
    <property name="username">
      <value>${install.server.db.user}</value>
    </property>
    <property name="password">
      <value>${install.server.db.password}</value>
    </property>
    <property name="connectionProperties">
      <!-- The connection properties that will be sent to our JDBC driver when establishing new connections.
           Format of the string must be [propertyName=property;]*  -->
      <value>${install.server.db.connectionProperties}</value>
    </property>
    <property name="maxActive">
     <value>${install.server.db.maxActive}</value>
    </property>
    <property name="maxIdle">
     <value>${install.server.db.maxIdle}</value>
    </property>
    <property name="minIdle">
     <value>${install.server.db.minIdle}</value>
    </property>
    <property name="defaultTransactionIsolation">
      <value>2</value>
    </property>
    <property name="defaultAutoCommit">
      <value>false</value>
    </property>
    <property name="testOnBorrow">
      <value>true</value>
    </property>
    <property name="validationQuery">
      <value>${install.server.db.validationQuery}</value>
    </property>
    <!-- this is available in commons-dbcp-1.3 -->
    <property name="validationQueryTimeout">
      <value>10</value>
    </property>
    <!-- track abandoned connections. this adds a overhead. only enable if connections are being leaked. -->
    <property name="logAbandoned">
      <value>true</value>
    </property>
    <property name="removeAbandonedTimeout">
      <value>300</value>
    </property>
    <property name="removeAbandoned">
      <value>false</value>
    </property>
  </bean>

  <!-- underlying database connection prototype configuration: NOT A SINGLETON -->
  <bean id="identityDataSourceTemplate" class="com.urbancode.ubuild.persistence.UBuildDataSource" scope="prototype"
        destroy-method="close">
    <property name="driverClassName">
      <value>${install.server.db.driver}</value>
    </property>
    <property name="url">
      <value>${install.server.db.url}</value>
    </property>
    <property name="username">
      <value>${install.server.db.user}</value>
    </property>
    <property name="password">
      <value>${install.server.db.password}</value>
    </property>
    <property name="maxActive">
     <value>20</value>
    </property>
    <property name="maxIdle">
     <value>20</value>
    </property>
    <property name="minIdle">
     <value>20</value>
    </property>
    <property name="defaultTransactionIsolation">
      <value>2</value>
    </property>
    <property name="defaultAutoCommit">
      <value>false</value>
    </property>
    <property name="testOnBorrow">
      <value>true</value>
    </property>
    <property name="validationQuery">
      <value>${install.server.db.validationQuery}</value>
    </property>
  </bean>

  <!-- DataSource used for persistence -->
  <bean id="baseDataSource" class="com.p6spy.engine.spy.P6DataSource" destroy-method="close" scope="singleton">
    <constructor-arg>
      <ref local="dataSourceTemplate"/>
    </constructor-arg>
  </bean>

  <bean id="dataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy" scope="singleton">
    <property name="targetDataSource">
      <ref local="baseDataSource"/>
    </property>
  </bean>

  <!-- DataSource used for identity generation so it does not create deadlocks -->
  <bean id="identityDataSource" class="com.p6spy.engine.spy.P6DataSource" destroy-method="close" scope="singleton">
    <constructor-arg>
      <ref local="identityDataSourceTemplate"/>
    </constructor-arg>
  </bean>

  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" scope="singleton">
    <property name="dataSource">
      <ref local="baseDataSource"/>
    </property>
  </bean>

  <bean id="action-scope-factory" class="com.urbancode.ubuild.persistence.UnitOfWorkFactoryDefault" scope="singleton"/>

  <bean id="agent-upgrade-service" class="com.urbancode.ubuild.services.agent.AgentUpgradeServiceServer" scope="singleton"/>

  <bean id="agent-restart-service" class="com.urbancode.ubuild.services.agent.AgentRestartServiceServer" scope="singleton"/>

  <bean id="audit-unitofwork-factory" class="com.urbancode.ubuild.domain.audit.AuditUnitOfWorkFactoryServer" scope="singleton"/>

  <bean id="auth-token-service" class="com.urbancode.ubuild.services.authtoken.AuthTokenServiceServer" scope="singleton"/>

  <bean id="authenticator" class="com.urbancode.ubuild.domain.security.JAASAuthenticator" scope="singleton"/>

  <bean id="cleanup-service" class="com.urbancode.ubuild.services.cleanup.CleanupServiceServer" scope="singleton"/>

  <bean id="codestation-repo-file-helper" class="com.urbancode.codestation2.server.CodestationRepositoryFileHelperServer" scope="prototype"/>

  <bean id="file-info-service" class="com.urbancode.ubuild.services.file.FileInfoServiceServer" scope="singleton"/>

  <bean id="jms-event-service" class="com.urbancode.commons.services.event.JMSEventService" scope="singleton">
    <constructor-arg type="java.lang.String"><value>${install.server.brokerUrl}</value></constructor-arg>
    <constructor-arg type="java.lang.String"><value>server-event-service</value></constructor-arg>
    <constructor-arg type="java.lang.String"><value>DistributedEvents</value></constructor-arg>
  </bean>

  <bean id="license-service" class="com.urbancode.ubuild.services.license.LicenseServiceServer" scope="singleton"/>

  <!-- being removed for log-path-helper -->
  <bean id="logging-service" class="com.urbancode.ubuild.services.logging.LoggingServiceImplDefault" scope="singleton"/>

  <bean id="log-file-service" class="com.urbancode.ubuild.services.logging.LogFileServiceServer" scope="singleton"/>

  <bean id="publish-path-helper" class="com.urbancode.ubuild.runtime.paths.PublishPathHelperServer" scope="singleton"/>

  <bean id="xmpp-im-service" class="com.urbancode.ubuild.services.im.xmpp.XmppImServiceServer" scope="singleton"/>

</beans>
