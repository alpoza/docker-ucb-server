<?xml version="1.0"?>
<!--
- Licensed Materials - Property of IBM Corp.
- IBM UrbanCode Build
- (c) Copyright IBM Corporation 2012, 2014. All Rights Reserved.
-
- U.S. Government Users Restricted Rights - Use, duplication or disclosure restricted by
- GSA ADP Schedule Contract with IBM Corp.
-->

<change-set release="4.1">

    <change number="1">
        <description>Update WorkflowDefinitionJobConfig table and add a CLEANUP column.</description>
        <sql separator=";">
            ALTER TABLE WORKFLOW_DEFINITION_JOB_CONFIG ADD CLEANUP VARCHAR2(10);
            UPDATE WORKFLOW_DEFINITION_JOB_CONFIG SET CLEANUP = 'NEVER';
        </sql>
    </change>
    <change number="2">
        <description>Remove PASS_TO_BUILDER column from PROJECT_PROPERTY table.</description>
        <sql separator=";">
            ALTER TABLE PROJECT_PROPERTY DROP COLUMN PASS_TO_BUILDER;
        </sql>
    </change>
    <change number="3">
        <description>Remove WORKFLOW_CASE_DATA table.</description>
        <sql separator=";">
            DROP TABLE WORKFLOW_CASE_DATA;
        </sql>
    </change>
    <change number="4">
        <description>Move build pre-processing settings to templates.</description>
        <sql separator=";"><![CDATA[
            ALTER TABLE PROJECT DROP COLUMN DATA;
            ALTER TABLE PROJECT_TEMPLATE ADD DATA CLOB
                LOB (DATA) STORE AS PROJECT_TEMPLATE_DATA_LOB;
            UPDATE PROJECT_TEMPLATE SET DATA = '<project-template/>';
        ]]></sql>
    </change>
    <change number="5">
      <description>Add a TEMPLATE_ID column to SOURCE_CONFIG</description>
      <sql separator=";">
        ALTER TABLE SOURCE_CONFIG ADD TEMPLATE_ID NUMERIC;
        UPDATE SOURCE_CONFIG SET TEMPLATE_ID = NULL;
      </sql>
    </change>
    <change number="6">
      <description>Migrate template ID from XML to TEMPLATE_ID column</description>
      <groovy file="4.1/ub_006_migrate_source_config_template_id_to_column.groovy"/>
      <sql separator=";">
        ALTER TABLE SOURCE_CONFIG DROP COLUMN FROM_TEMPLATE;
      </sql>
    </change>
    <change number="7">
      <description>Process execution reporting</description>
      <sql separator=";">
DROP TABLE PROCESS_INSTANCE_DIM;
        
CREATE TABLE PROCESS_EXECUTION (
    PROCESS_ID       VARCHAR2(36) NOT NULL,
    PROCESS          VARCHAR2(36) NOT NULL,
    BUILD_LIFE       VARCHAR2(36) NOT NULL,
    REQUEST_DATE     VARCHAR2(36) NOT NULL,
    REQUEST_TIME     VARCHAR2(36) NOT NULL,
    START_DATE       VARCHAR2(36) NOT NULL,
    START_TIME       VARCHAR2(36) NOT NULL,
    END_DATE         VARCHAR2(36) NOT NULL,
    END_TIME         VARCHAR2(36) NOT NULL,
    REQUEST_USER     VARCHAR2(36) NOT NULL,
    REQUEST_SOURCE   VARCHAR2(10) NOT NULL,
    DURATION         VARCHAR2(20) NOT NULL,
    RESULT           VARCHAR2(10) NOT NULL,
    RELATIVE_RESULT  VARCHAR2(20)
);
    
CREATE INDEX PE_PROCESS_IX
    ON PROCESS_EXECUTION(PROCESS);

CREATE INDEX PE_BUILD_LIFE_IX
    ON PROCESS_EXECUTION(BUILD_LIFE);

CREATE INDEX PE_REQUEST_DATE_IX
    ON PROCESS_EXECUTION(REQUEST_DATE);

CREATE INDEX PE_REQUEST_TIME_IX
    ON PROCESS_EXECUTION(REQUEST_TIME);

CREATE INDEX PE_START_DATE_IX
    ON PROCESS_EXECUTION(START_DATE);

CREATE INDEX PE_START_TIME_IX
    ON PROCESS_EXECUTION(START_TIME);

CREATE INDEX PE_END_DATE_IX
    ON PROCESS_EXECUTION(END_DATE);

CREATE INDEX PE_END_TIME_IX
    ON PROCESS_EXECUTION(END_TIME);

CREATE INDEX PE_REQUEST_USER_IX
    ON PROCESS_EXECUTION(REQUEST_USER);

ALTER TABLE PROCESS_EXECUTION ADD CONSTRAINT PE_PROCESS_FK
    FOREIGN KEY (PROCESS)
    REFERENCES PROCESS_DIM (ID)
;

ALTER TABLE PROCESS_EXECUTION ADD CONSTRAINT PE_BUILD_LIFE_FK
    FOREIGN KEY (BUILD_LIFE)
    REFERENCES BUILD_LIFE_DIM (ID)
;

ALTER TABLE PROCESS_EXECUTION ADD CONSTRAINT PE_REQUEST_DATE_FK
    FOREIGN KEY (REQUEST_DATE)
    REFERENCES DATE_DIM (ID)
;

ALTER TABLE PROCESS_EXECUTION ADD CONSTRAINT PE_REQUEST_TIME_FK
    FOREIGN KEY (REQUEST_TIME)
    REFERENCES TIME_DIM (ID)
;

ALTER TABLE PROCESS_EXECUTION ADD CONSTRAINT PE_START_DATE_FK
    FOREIGN KEY (START_DATE)
    REFERENCES DATE_DIM (ID)
;

ALTER TABLE PROCESS_EXECUTION ADD CONSTRAINT PE_START_TIME_FK
    FOREIGN KEY (START_TIME)
    REFERENCES TIME_DIM (ID)
;

ALTER TABLE PROCESS_EXECUTION ADD CONSTRAINT PE_END_DATE_FK
    FOREIGN KEY (END_DATE)
    REFERENCES DATE_DIM (ID)
;

ALTER TABLE PROCESS_EXECUTION ADD CONSTRAINT PE_END_TIME_FK
    FOREIGN KEY (END_TIME)
    REFERENCES TIME_DIM (ID)
;

ALTER TABLE PROCESS_EXECUTION ADD CONSTRAINT PE_REQUEST_USER_FK
    FOREIGN KEY (REQUEST_USER)
    REFERENCES USER_DIM (ID)
;

DELETE FROM REP_DIMENSION_COLUMN WHERE PARENT_ID = '00000000-0000-0000-0000-000000000011';
DELETE FROM REP_DIMENSION WHERE ID = '00000000-0000-0000-0000-000000000011';

INSERT INTO REP_FACT_TABLE (ID, NAME, DESCRIPTION)
VALUES ('00000000-0000-0000-0000-000000000025', 'PROCESS_EXECUTION', 'Process Execution');

INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
VALUES ('00000000-0000-0000-0000-000000000025', 'PROCESS_ID', 'The id of the process instance.', 0);
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
VALUES ('00000000-0000-0000-0000-000000000025', 'PROCESS', 'The process executed.', 0, '00000000-0000-0000-0000-000000000009');
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
VALUES ('00000000-0000-0000-0000-000000000025', 'BUILD_LIFE', 'The build life the process was executed on.', 1, '00000000-0000-0000-0000-000000000010');
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
VALUES ('00000000-0000-0000-0000-000000000025', 'REQUEST_DATE', 'The date the process was requested', 0, '00000000-0000-0000-0000-000000000001');
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
VALUES ('00000000-0000-0000-0000-000000000025', 'REQUEST_TIME', 'The time the process was requested', 0, '00000000-0000-0000-0000-000000000002');
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
VALUES ('00000000-0000-0000-0000-000000000025', 'START_DATE', 'The date the process started', 0, '00000000-0000-0000-0000-000000000001');
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
VALUES ('00000000-0000-0000-0000-000000000025', 'START_TIME', 'The time the process started', 0, '00000000-0000-0000-0000-000000000002');
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
VALUES ('00000000-0000-0000-0000-000000000025', 'END_DATE', 'The date the process ended', 0, '00000000-0000-0000-0000-000000000001');
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
VALUES ('00000000-0000-0000-0000-000000000025', 'END_TIME', 'The time the process ended', 0, '00000000-0000-0000-0000-000000000002');
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
VALUES ('00000000-0000-0000-0000-000000000025', 'REQUEST_USER', 'The user who requested the process', 0, '00000000-0000-0000-0000-000000000003');
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
VALUES ('00000000-0000-0000-0000-000000000025', 'REQUEST_SOURCE', 'The type of request source.', 0);
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
VALUES ('00000000-0000-0000-0000-000000000025', 'DURATION', 'The duration of the process in seconds.', 0);
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
VALUES ('00000000-0000-0000-0000-000000000025', 'RESULT', 'The result of the process.', 0);
INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
VALUES ('00000000-0000-0000-0000-000000000025', 'RELATIVE_RESULT', 'The result of the build process in relation to the previous run.', 1);
      </sql>
      <groovy file="4.1/ub_007_process_execution_reporting.groovy"/>
    </change>
    
    <change number="8">
      <description>Insert information about source analytic reporting</description>
      <sql separator=";">
        CREATE TABLE SOURCE_ANALYTIC_REPORT_DIM (
            ID                     VARCHAR2(36) NOT NULL PRIMARY KEY,
            REPORT_ID              VARCHAR2(300) NOT NULL,
            REPORT_NAME            VARCHAR2(255) NOT NULL,
            BUILD_LIFE             VARCHAR2(36) NOT NULL,
            TYPE                   VARCHAR2(64) NOT NULL,
            URL_LINK               VARCHAR2(255),
            REPORT_DATE            VARCHAR2(36) NOT NULL,
            REPORT_TIME            VARCHAR2(36) NOT NULL
        );
        
        CREATE TABLE SOURCE_ANALYTIC (
            REPORT                 VARCHAR2(36) NOT NULL,
            FINDING_ID             VARCHAR2(255),
            NAME                   VARCHAR2(255),
            FILE_NAME              VARCHAR2(1000),
            LINE_NUMBER            VARCHAR2(255),
            STATUS                 VARCHAR2(255),
            SEVERITY               VARCHAR2(255),
            FINDING_URL_LINK       VARCHAR2(255),
            DESCRIPTION            CLOB
        ) LOB (DESCRIPTION) STORE AS SA_DESCRIPTION_LOB;
        
        CREATE INDEX SARD_BUILD_LIFE_IX
            ON SOURCE_ANALYTIC_REPORT_DIM(BUILD_LIFE);
        CREATE INDEX SARD_REPORT_DATE_IX
            ON SOURCE_ANALYTIC_REPORT_DIM(REPORT_DATE);
        CREATE INDEX SARD_REPORT_TIME_IX
            ON SOURCE_ANALYTIC_REPORT_DIM(REPORT_TIME);
        CREATE INDEX SA_REPORT_IX
            ON SOURCE_ANALYTIC(REPORT);
        ALTER TABLE SOURCE_ANALYTIC_REPORT_DIM ADD CONSTRAINT SARD_BUILD_LIFE_FK
            FOREIGN KEY (BUILD_LIFE)
            REFERENCES BUILD_LIFE_DIM (ID)
        ;
        ALTER TABLE SOURCE_ANALYTIC_REPORT_DIM ADD CONSTRAINT SARD_REPORT_DATE_FK
            FOREIGN KEY (REPORT_DATE)
            REFERENCES DATE_DIM (ID)
        ;
        ALTER TABLE SOURCE_ANALYTIC_REPORT_DIM ADD CONSTRAINT SARD_REPORT_TIME_FK
            FOREIGN KEY (REPORT_TIME)
            REFERENCES TIME_DIM (ID)
        ;
        ALTER TABLE SOURCE_ANALYTIC ADD CONSTRAINT SA_REPORT_FK
            FOREIGN KEY (REPORT)
            REFERENCES SOURCE_ANALYTIC_REPORT_DIM (ID)
        ;

        INSERT INTO REP_DIMENSION(ID, NAME, DESCRIPTION, MUTABLE) VALUES('00000000-0000-0000-0000-000000000026',
            'SOURCE_ANALYTIC_REPORT_DIM', 'Source analytic report information', 1);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
            VALUES('00000000-0000-0000-0000-000000000026', 'REPORT_ID', 'The unique id of the report', 0, 1);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
            VALUES('00000000-0000-0000-0000-000000000026', 'REPORT_NAME', 'The name of the analytic report', 0, 0);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY, DIMENSION_ID)
            VALUES('00000000-0000-0000-0000-000000000026', 'BUILD_LIFE', 'The build life the report is on.', 0, 0,
            '00000000-0000-0000-0000-000000000010');
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
            VALUES('00000000-0000-0000-0000-000000000026', 'TYPE', 'The type of the source analytic', 0, 0);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
            VALUES('00000000-0000-0000-0000-000000000026', 'URL_LINK', 'The URL link for the source analytic', 1, 0);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY, DIMENSION_ID)
            VALUES('00000000-0000-0000-0000-000000000026', 'REPORT_DATE', 'The date of the report.', 0, 0,
            '00000000-0000-0000-0000-000000000001');
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY, DIMENSION_ID)
            VALUES('00000000-0000-0000-0000-000000000026', 'REPORT_TIME', 'The time of the report.', 0, 0,
            '00000000-0000-0000-0000-000000000002');

        INSERT INTO REP_FACT_TABLE(ID, NAME, DESCRIPTION) VALUES('00000000-0000-0000-0000-000000000027', 
            'SOURCE_ANALYTIC', 'Source analytics in a build life process');
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
            VALUES('00000000-0000-0000-0000-000000000027', 'REPORT', 'The report for the source analytic findings', 0,
            '00000000-0000-0000-0000-000000000026');
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000027', 'FINDING_ID', 'The ID for the source analytic finding', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000027', 'NAME', 'The name of the source analytic finding', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000027', 'FILE_NAME', 'The name of the file that contained the finding', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000027', 'LINE_NUMBER', 'The line number where the finding was located', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000027', 'STATUS', 'The status of the source analytic finding', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000027', 'SEVERITY', 'The severity of the source analytic finding', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000027', 'FINDING_URL_LINK', 'The URL link for the finding', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000027', 'DESCRIPTION', 'The description of the source analytic finding', 1);
      </sql>
      <groovy file="4.1/ub_008_source_analytic_reporting.groovy"/>
    </change>
    <change number="9">
      <description>Remove old SOURCE_ANALYTICS tables</description>
      <sql separator=";">
        DROP TABLE SOURCE_ANALYTICS_FINDING;
        DROP TABLE SOURCE_ANALYTICS_REPORT;
      </sql>
    </change>
    <change number="10">
      <description>Dynamic iteration support</description>
      <sql separator=";">
        ALTER TABLE WORKFLOW_DEFINITION_JOB_CONFIG ADD ITERATION_TYPE VARCHAR2(32);
        ALTER TABLE WORKFLOW_DEFINITION_JOB_CONFIG ADD ITERATION_PROPERTY_NAME VARCHAR2(255);
        ALTER TABLE WORKFLOW_DEFINITION_JOB_CONFIG ADD REQUIRE_ALL_AGENTS NUMERIC DEFAULT 0;
        UPDATE WORKFLOW_DEFINITION_JOB_CONFIG SET ITERATION_TYPE = 'Fixed' WHERE ITERATIONS > 0;
        UPDATE WORKFLOW_DEFINITION_JOB_CONFIG SET ITERATION_TYPE = 'AgentPool' WHERE ITERATIONS = -1;
        UPDATE WORKFLOW_DEFINITION_JOB_CONFIG SET REQUIRE_ALL_AGENTS = 0;
      </sql>
    </change>
    <change number="11">
      <description>Insert information about code coverage reporting</description>
      <sql separator=";">
        CREATE TABLE CODE_COVERAGE_REPORT_DIM (
            ID                     VARCHAR2(36) NOT NULL PRIMARY KEY,
            REPORT_ID              VARCHAR2(300) NOT NULL,
            REPORT_NAME            VARCHAR2(255) NOT NULL,
            BUILD_LIFE             VARCHAR2(36) NOT NULL,
            COVERAGE_TYPE          VARCHAR2(64) NOT NULL,
            LINE_PERC              VARCHAR2(6),
            METHOD_PERC            VARCHAR2(6),
            BRANCH_PERC            VARCHAR2(6),
            REPORT_DATE            VARCHAR2(36) NOT NULL,
            REPORT_TIME            VARCHAR2(36) NOT NULL
        );
        
        CREATE TABLE CODE_COVERAGE_GROUP (
            REPORT                 VARCHAR2(36) NOT NULL,
            NAME                   VARCHAR2(255),
            LINE_PERC              VARCHAR2(6),
            METHOD_PERC            VARCHAR2(6),
            BRANCH_PERC            VARCHAR2(6),
            COMPLEXITY             VARCHAR2(19)
        );
        
        CREATE INDEX CCRD_BUILD_LIFE_IX
            ON CODE_COVERAGE_REPORT_DIM(BUILD_LIFE);
        CREATE INDEX CCRD_REPORT_DATE_IX
            ON CODE_COVERAGE_REPORT_DIM(REPORT_DATE);
        CREATE INDEX CCRD_REPORT_TIME_IX
            ON CODE_COVERAGE_REPORT_DIM(REPORT_TIME);
        CREATE INDEX CCG_REPORT_IX
            ON CODE_COVERAGE_GROUP(REPORT);
        ALTER TABLE CODE_COVERAGE_REPORT_DIM ADD CONSTRAINT CCRD_BUILD_LIFE_FK
            FOREIGN KEY (BUILD_LIFE)
            REFERENCES BUILD_LIFE_DIM (ID)
        ;
        ALTER TABLE CODE_COVERAGE_REPORT_DIM ADD CONSTRAINT CCRD_REPORT_DATE_FK
            FOREIGN KEY (REPORT_DATE)
            REFERENCES DATE_DIM (ID)
        ;
        ALTER TABLE CODE_COVERAGE_REPORT_DIM ADD CONSTRAINT CCRD_REPORT_TIME_FK
            FOREIGN KEY (REPORT_TIME)
            REFERENCES TIME_DIM (ID)
        ;
        ALTER TABLE CODE_COVERAGE_GROUP ADD CONSTRAINT CCG_REPORT_FK
            FOREIGN KEY (REPORT)
            REFERENCES CODE_COVERAGE_REPORT_DIM (ID)
        ;

        INSERT INTO REP_DIMENSION(ID, NAME, DESCRIPTION, MUTABLE) VALUES('00000000-0000-0000-0000-000000000028',
            'CODE_COVERAGE_REPORT_DIM', 'Code coverage report information', 1);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
            VALUES('00000000-0000-0000-0000-000000000028', 'REPORT_ID', 'The unique id of the report', 0, 1);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
            VALUES('00000000-0000-0000-0000-000000000028', 'REPORT_NAME', 'The name of the code coverage report', 0, 0);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY, DIMENSION_ID)
            VALUES('00000000-0000-0000-0000-000000000028', 'BUILD_LIFE', 'The build life the report is on.', 0, 0,
            '00000000-0000-0000-0000-000000000010');
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
            VALUES('00000000-0000-0000-0000-000000000028', 'COVERAGE_TYPE', 'The type of the code coverage', 0, 0);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
            VALUES('00000000-0000-0000-0000-000000000028', 'LINE_PERC', 'The line coverage percentage for the report', 1, 0);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
            VALUES('00000000-0000-0000-0000-000000000028', 'METHOD_PERC', 'The method coverage percentage for the report', 1, 0);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
            VALUES('00000000-0000-0000-0000-000000000028', 'BRANCH_PERC', 'The branch coverage percentage for the report', 1, 0);
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY, DIMENSION_ID)
            VALUES('00000000-0000-0000-0000-000000000028', 'REPORT_DATE', 'The date of the report.', 0, 0,
            '00000000-0000-0000-0000-000000000001');
        INSERT INTO REP_DIMENSION_COLUMN(PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY, DIMENSION_ID)
            VALUES('00000000-0000-0000-0000-000000000028', 'REPORT_TIME', 'The time of the report.', 0, 0,
            '00000000-0000-0000-0000-000000000002');
            
        INSERT INTO REP_FACT_TABLE(ID, NAME, DESCRIPTION) VALUES('00000000-0000-0000-0000-000000000029', 
            'CODE_COVERAGE_GROUP', 'Code coverage in a build life process');
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
            VALUES('00000000-0000-0000-0000-000000000029', 'REPORT', 'The report for the code coverage groups', 0,
            '00000000-0000-0000-0000-000000000028');
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000029', 'NAME', 'The name of the source analytic finding', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000029', 'LINE_PERC', 'The line coverage percentage for the group', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000029', 'METHOD_PERC', 'The method coverage percentage for the group', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000029', 'BRANCH_PERC', 'The branch coverage percentage for the group', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN(FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
            VALUES('00000000-0000-0000-0000-000000000029', 'COMPLEXITY', 'The complexity for the group', 1);
      </sql>
      <groovy file="4.1/ub_011_code_coverage_reporting.groovy"/>
    </change>
    <change number="12">
      <description>Removed old code coverage tables</description>
      <sql separator=";">
        DROP TABLE COVERAGE_GROUP;
        DROP TABLE COVERAGE_REPORT;
      </sql>
    </change>
    <change number="13">
      <description>Remove properties that are lingering on projects and source configs even after deletion from the template</description>
      <sql separator=";">
      DELETE FROM PROJECT_PROPERTY WHERE PROJECT_PROPERTY.NAME NOT IN (
        SELECT PROPERTY_TEMPLATE.NAME
        FROM PROPERTY_TEMPLATE
        JOIN PROJECT_TEMPLATE PT ON PT.ID = PROPERTY_TEMPLATE.OWNER_ID
        JOIN PROJECT P ON P.PROJECT_TEMPLATE_ID = PT.ID
        WHERE PROPERTY_TEMPLATE.OWNER_CLASS = 'com.urbancode.ubuild.domain.project.template.ProjectTemplate'
        AND P.ID = PROJECT_PROPERTY.PROJECT_ID
      );
      
      DELETE FROM PROPERTY WHERE PROPERTY.NAME NOT IN (
        SELECT PT.NAME
        FROM PROPERTY_TEMPLATE PT
        JOIN SOURCE_CONFIG_TEMPLATE SCT ON SCT.ID = PT.OWNER_ID
        JOIN SOURCE_CONFIG SC ON SC.TEMPLATE_ID = SCT.ID
        WHERE PT.OWNER_CLASS = 'com.urbancode.ubuild.domain.source.template.SourceConfigTemplate'
        AND PROPERTY.OWNER_CLASS = 'com.urbancode.ubuild.domain.source.SourceConfig'
        AND SC.ID = PROPERTY.OWNER_ID
      );
      </sql>
    </change>
    <change number="14">
      <description>Fixing bug regarding partial property sheets</description>
      <groovy file="4.1/ub_014_fix_repo_prop_sheets.groovy" />
    </change>
    <change number="15">
      <description>Adding reporting for source changes and issues</description>
      <sql separator=";">
      
        CREATE TABLE REPOSITORY_DIM (
           ID           VARCHAR2(36) NOT NULL PRIMARY KEY,
           REPO_ID      VARCHAR2(36) NOT NULL,
           REPO_NAME    VARCHAR2(255) NOT NULL,
           REPO_TYPE    VARCHAR2(255) NOT NULL
        );
        
        CREATE TABLE SOURCE_CONFIG_DIM (
            ID                    VARCHAR2(36)  NOT NULL PRIMARY KEY,
            SOURCE_CONFIG_ID      VARCHAR2(36)  NOT NULL,
            SOURCE_CONFIG_NAME    VARCHAR2(255) NOT NULL,
            REPOSITORY            VARCHAR2(36)  NOT NULL
        );
        
        CREATE TABLE REPO_USER_DIM (
            ID                  VARCHAR2(36) NOT NULL PRIMARY KEY,
            REPO_USER_ID        VARCHAR2(36) NOT NULL,
            REPO_USER_NAME      VARCHAR2(255) NOT NULL,
            REPOSITORY          VARCHAR2(36) NOT NULL
        );
        
        CREATE TABLE CHANGE_SET_DIM (
            ID                  VARCHAR2(36) NOT NULL PRIMARY KEY,
            CHANGE_SET_ID       VARCHAR2(255) NOT NULL,
            SCM_ID              VARCHAR2(255),
            CHANGE_COMMENT             CLOB,
            CHANGE_MODULE       VARCHAR2(255),
            CHANGE_BRANCH       VARCHAR2(255),
            CHANGED_FILES       VARCHAR2(100) NOT NULL,
            CHANGE_DATE         VARCHAR2(36) NOT NULL,
            CHANGE_TIME         VARCHAR2(36) NOT NULL,
            SOURCE_CONFIG       VARCHAR2(36) NOT NULL,
            REPO_USER           VARCHAR2(36) NOT NULL
        ) LOB (CHANGE_COMMENT) STORE AS CSD_CHANGE_COMMENT_LOB;
        
        CREATE TABLE CHANGE_SET_PROPERTY (
            PROP_NAME       VARCHAR2(255) NOT NULL,
            PROP_VALUE      VARCHAR2(400) NOT NULL,
            CHANGE_SET      VARCHAR2(36) NOT NULL
        );
        
        CREATE TABLE SOURCE_CHANGE (
            CHANGE_SET      VARCHAR2(36) NOT NULL,
            BUILD_LIFE      VARCHAR2(36) NOT NULL
        );
        
        CREATE TABLE FILE_CHANGE (
            CHANGE_TYPE     VARCHAR2(20),
            CHANGE_PATH     VARCHAR2(1024) NOT NULL,
            REVISION_NUMBER VARCHAR2(255),
            CHANGE_SET      VARCHAR2(36) NOT NULL
        );
        
        CREATE TABLE ISSUE_TRACKER_DIM (
            ID          VARCHAR2(36)  NOT NULL PRIMARY KEY,
            NAME        VARCHAR2(512) NOT NULL
        );
        
        CREATE TABLE ISSUE_DIM (
            ID                  VARCHAR2(36)   NOT NULL PRIMARY KEY,
            ISSUE_ID            VARCHAR2(255)  NOT NULL,
            NAME                VARCHAR2(512)  NOT NULL,
            TYPE                VARCHAR2(128),
            STATUS              VARCHAR2(128),
            DESCRIPTION         CLOB,
            URL                 VARCHAR2(4000),
            LAST_DATE           VARCHAR2(36)   NOT NULL,
            LAST_TIME           VARCHAR2(36)   NOT NULL,
            ISSUE_TRACKER       VARCHAR2(36)   NOT NULL
        ) LOB (DESCRIPTION) STORE AS ID_DESCRIPTION_LOB;
        
        CREATE TABLE CHANGE_SET_ISSUE_FACT (
            CHANGE_SET      VARCHAR2(36) NOT NULL,
            ISSUE           VARCHAR2(36) NOT NULL
        );
        
        INSERT INTO REP_DIMENSION (ID, NAME, DESCRIPTION, MUTABLE)
        VALUES ('00000000-0000-0000-0000-000000000015', 'REPOSITORY_DIM', 'Repository', 1);
        
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000015', 'REPO_ID', 'The id of the repository.', 0, 1);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000015', 'REPO_NAME', 'The name of the repository.', 0, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000015', 'REPO_TYPE', 'The type of the repository', 0, 0);
        
        INSERT INTO REP_DIMENSION (ID, NAME, DESCRIPTION, MUTABLE)
        VALUES ('00000000-0000-0000-0000-000000000016', 'SOURCE_CONFIG_DIM', 'Source Config', 1);
        
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000016', 'SOURCE_CONFIG_ID', 'The id of the process template.', 0, 1);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000016', 'SOURCE_CONFIG_NAME', 'The name of the process template.', 0, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000016', 'REPOSITORY', 'The repository held by a source configuration.', 0, '00000000-0000-0000-0000-000000000015');
        
        INSERT INTO REP_DIMENSION (ID, NAME, DESCRIPTION, MUTABLE)
        VALUES ('00000000-0000-0000-0000-000000000018', 'REPO_USER_DIM', 'Repository User', 1);
        
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000018', 'REPO_USER_ID', 'The id of the repository user', 0, 1);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000018', 'REPO_USER_NAME', 'The name of the repository user', 0, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000018', 'REPOSITORY', 'The repository the user is associated with', 0, '00000000-0000-0000-0000-000000000015');
        
        INSERT INTO REP_DIMENSION (ID, NAME, DESCRIPTION, MUTABLE)
        VALUES ('00000000-0000-0000-0000-000000000017', 'CHANGE_SET_DIM', 'Change Set', 1);
        
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000017', 'CHANGE_SET_ID', 'The id of the changeset', 0, 1);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000017', 'SCM_ID', 'The id of the SCM object.', 0, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000017', 'CHANGE_COMMENT', 'The comment on the changeset', 1, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000017', 'CHANGE_MODULE', 'The module associated with the change', 1, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000017', 'CHANGE_BRANCH', 'The branch the change was made on', 1, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000017', 'CHANGED_FILES', 'The number of changed files in this set', 0, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000017', 'CHANGE_DATE', 'The date of the change', 0, '00000000-0000-0000-0000-000000000001');
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000017', 'CHANGE_TIME', 'The time of the change', 0, '00000000-0000-0000-0000-000000000002');
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000017', 'SOURCE_CONFIG', 'The source configuration behind the changeset.', 0, '00000000-0000-0000-0000-000000000016');
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000017', 'REPO_USER', 'The repository user behind the change', 0, '00000000-0000-0000-0000-000000000018');
        
        INSERT INTO REP_FACT_TABLE (ID, NAME, DESCRIPTION)
        VALUES ('00000000-0000-0000-0000-000000000021', 'CHANGE_SET_PROPERTY', 'A property for a change set');
        
        INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
        VALUES ('00000000-0000-0000-0000-000000000021', 'PROP_NAME', 'The name of the property', 0);
        INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
        VALUES ('00000000-0000-0000-0000-000000000021', 'PROP_VALUE', 'The value of the property', 0);
        INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000021', 'CHANGE_SET', 'The change set this property belongs to', 0, '00000000-0000-0000-0000-000000000017');
        
        INSERT INTO REP_FACT_TABLE (ID, NAME, DESCRIPTION)
        VALUES ('00000000-0000-0000-0000-000000000019', 'SOURCE_CHANGE', 'Source Changes');
        
        INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000019', 'CHANGE_SET', 'The change set.', 0, '00000000-0000-0000-0000-000000000017');
        INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000019', 'BUILD_LIFE', 'The build life.', 0, '00000000-0000-0000-0000-000000000010');
        
        INSERT INTO REP_FACT_TABLE (ID, NAME, DESCRIPTION)
        VALUES ('00000000-0000-0000-0000-000000000020', 'FILE_CHANGE', 'Changes to an artifact');
        
        INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000020', 'CHANGE_SET', 'The change set this change is a part of', 0, '00000000-0000-0000-0000-000000000017');
        INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
        VALUES ('00000000-0000-0000-0000-000000000020', 'CHANGE_TYPE', '(A)dd, (D)elete, or (M)odified', 1);
        INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
        VALUES ('00000000-0000-0000-0000-000000000020', 'CHANGE_PATH', 'The path torwards the changed file', 0);
        INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE)
        VALUES ('00000000-0000-0000-0000-000000000020', 'REVISION_NUMBER', 'The revision number of the change', 1);
        
        
        
        INSERT INTO REP_DIMENSION (ID, NAME, DESCRIPTION, MUTABLE)
        VALUES ('00000000-0000-0000-0000-000000000022', 'ISSUE_TRACKER_DIM', 'Issue Tracker', 1);
        
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000022', 'NAME', 'The name of the issue tracker', 0, 1);
        
        
        INSERT INTO REP_DIMENSION (ID, NAME, DESCRIPTION, MUTABLE)
        VALUES ('00000000-0000-0000-0000-000000000023', 'ISSUE_DIM', 'Issues from an issue tracker', 1);
        
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000023', 'ISSUE_ID', 'The id of the issue', 0, 1);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000023', 'NAME', 'The name of the issue', 0, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000023', 'TYPE', 'The type of the issue', 1, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000023', 'STATUS', 'The status of the issue',1, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000023', 'DESCRIPTION', 'The description of the issue', 1, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, PRIMARY_KEY)
        VALUES ('00000000-0000-0000-0000-000000000023', 'URL', 'The URL for the trackers page for this issue', 1, 0);
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000023', 'LAST_DATE', 'The date this issue was most recently updated', 0, '00000000-0000-0000-0000-000000000001');
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000023', 'LAST_TIME', 'The time this issue was most recently updated', 0, '00000000-0000-0000-0000-000000000002');
        INSERT INTO REP_DIMENSION_COLUMN (PARENT_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000023', 'ISSUE_TRACKER', 'The issue tracker', 0, '00000000-0000-0000-0000-000000000022');
        
        
        INSERT INTO REP_FACT_TABLE (ID, NAME, DESCRIPTION)
        VALUES ('00000000-0000-0000-0000-000000000024', 'CHANGE_SET_ISSUE_FACT', 'The relationship between issues and change sets');
        
        INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000024', 'CHANGE_SET', 'The change set', 0, '00000000-0000-0000-0000-000000000017');
        INSERT INTO REP_FACT_TABLE_COLUMN (FACT_TABLE_ID, NAME, DESCRIPTION, NULLABLE, DIMENSION_ID)
        VALUES ('00000000-0000-0000-0000-000000000024', 'ISSUE', 'The issue', 0, '00000000-0000-0000-0000-000000000023');
        
        
        CREATE INDEX CSD_SOURCE_CONFIG_IX
            ON CHANGE_SET_DIM(SOURCE_CONFIG);
        
        CREATE INDEX CSD_REPO_USER_IX
            ON CHANGE_SET_DIM(REPO_USER);
        
        CREATE INDEX RUD_REPOSITORY_IX
            ON REPO_USER_DIM(REPOSITORY);
        
        CREATE INDEX CSP_CHANGE_SET_IX
            ON CHANGE_SET_PROPERTY(CHANGE_SET);
        
        CREATE INDEX SC_CHANGE_SET_IX
            ON SOURCE_CHANGE(CHANGE_SET);
        
        CREATE INDEX SC_BUILD_LIFE_IX
            ON SOURCE_CHANGE(BUILD_LIFE);
        
        CREATE INDEX SCD_REPOSITORY_IX
            ON SOURCE_CONFIG_DIM(REPOSITORY);
            
        CREATE INDEX C_CHANGE_SET_IX
            ON FILE_CHANGE (CHANGE_SET);
        
        CREATE INDEX ID_LAST_DATE_IX
            ON ISSUE_DIM (LAST_DATE);
        
        CREATE INDEX ID_LAST_TIME_IX
            ON ISSUE_DIM (LAST_TIME);
        
        CREATE INDEX ID_ISSUE_TRACKER_IX
            ON ISSUE_DIM (ISSUE_TRACKER);
        
        CREATE INDEX CSIF_CHANGE_SET_IX
            ON CHANGE_SET_ISSUE_FACT (CHANGE_SET);
        
        CREATE INDEX CSIF_ISSUE_IX
            ON CHANGE_SET_ISSUE_FACT (ISSUE);
            
        
        ALTER TABLE SOURCE_CONFIG_DIM ADD CONSTRAINT SCD_REPOSITORY_FK
            FOREIGN KEY (REPOSITORY)
            REFERENCES REPOSITORY_DIM (ID)
        ;
        
        ALTER TABLE CHANGE_SET_DIM ADD CONSTRAINT CSD_SOURCE_CONFIG_FK
            FOREIGN KEY (SOURCE_CONFIG)
            REFERENCES SOURCE_CONFIG_DIM(ID)
        ;
        
        ALTER TABLE CHANGE_SET_DIM ADD CONSTRAINT CSD_REPO_USER_FK
            FOREIGN KEY (REPO_USER)
            REFERENCES REPO_USER_DIM(ID)
        ;
        
        ALTER TABLE REPO_USER_DIM ADD CONSTRAINT RUD_REPOSITORY_FK
            FOREIGN KEY (REPOSITORY)
            REFERENCES REPOSITORY_DIM (ID)
        ;
        
        ALTER TABLE CHANGE_SET_PROPERTY ADD CONSTRAINT CSP_CHANGE_SET_FK
            FOREIGN KEY (CHANGE_SET)
            REFERENCES CHANGE_SET_DIM (ID)
        ;
        
        ALTER TABLE SOURCE_CHANGE ADD CONSTRAINT SC_CHANGE_SET_FK
            FOREIGN KEY (CHANGE_SET)
            REFERENCES CHANGE_SET_DIM (ID)
        ;
        
        ALTER TABLE SOURCE_CHANGE ADD CONSTRAINT SC_BUILD_LIFE_FK
            FOREIGN KEY (BUILD_LIFE)
            REFERENCES BUILD_LIFE_DIM (ID)
        ;
        
        ALTER TABLE FILE_CHANGE ADD CONSTRAINT C_CHANGE_SET_FK
            FOREIGN KEY (CHANGE_SET)
            REFERENCES CHANGE_SET_DIM (ID)
        ;
        
        ALTER TABLE ISSUE_DIM ADD CONSTRAINT ID_LAST_DATE_FK
            FOREIGN KEY (LAST_DATE)
            REFERENCES DATE_DIM (ID)
        ;
        
        ALTER TABLE ISSUE_DIM ADD CONSTRAINT ID_LAST_TIME_FK
            FOREIGN KEY (LAST_TIME)
            REFERENCES TIME_DIM (ID)
        ;
        
        ALTER TABLE ISSUE_DIM ADD CONSTRAINT ID_ISSUE_TRACKER_FK
            FOREIGN KEY (ISSUE_TRACKER)
            REFERENCES ISSUE_TRACKER_DIM (ID)
        ;
        
        ALTER TABLE CHANGE_SET_ISSUE_FACT ADD CONSTRAINT CSIF_CHANGE_SET_FK
            FOREIGN KEY (CHANGE_SET)
            REFERENCES CHANGE_SET_DIM (ID)
        ;
        
        ALTER TABLE CHANGE_SET_ISSUE_FACT ADD CONSTRAINT CSIF_ISSUE_FK
            FOREIGN KEY (ISSUE)
            REFERENCES ISSUE_DIM (ID)
        ;
      </sql>
      <groovy file="4.1/ub_015_migrate_source_changes_and_issues.groovy" />
    </change>
    <change number="16">
      <description>Dropping old source change and issue tables</description>
      <sql separator=";">
        DROP TABLE CHANGE_SET_ISSUE;
        
        DROP TABLE REPOSITORY_CHANGE_SET_PROPERTY;
        DROP TABLE BUILD_LIFE_CHANGE_SET;
        DROP TABLE REPOSITORY_CHANGE;
        DROP TABLE REPOSITORY_CHANGE_SET;
        
        DROP TABLE ISSUE;
        DROP TABLE ISSUE_TRACKER;
      </sql>
    </change>
    <change number="17">
      <description>Dropping old source change and issue tables</description>
      <sql separator=";">
        UPDATE REP_DIMENSION SET MUTABLE = 0 WHERE NAME = 'CHANGE_SET_DIM';
      </sql>
    </change>
    <change number="18">
      <description>Update property template XML to use new classes</description>
      <groovy file="4.1/ub_018_update_property_template_xml.groovy" />
    </change>
    <change number="19">
      <description>Update FileUtils plugin commmand to be inline with plugin upgrades</description>
      <groovy file="4.1/ub_019_update_plugins_for_upgrade.groovy" />
    </change>
    <change number="20">
      <description>Update FileUtils plugin commmand to be inline with plugin upgrades</description>
      <sql separator=";">
      UPDATE pl_plugin SET plugin_version = 23 WHERE plugin_id = 'com.urbancode.air.plugin.FileUtils';
      </sql>
    </change>
    <change number="21">
      <description>Update notification templates to have a subject field</description>
      <sql separator=";">
        UPDATE TEMPLATE SET DATA = '<![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?><template><name>Simple IM Template</name>
<template-text><![CDATA[## BEGIN SECTION Subject

#set($project = $workflow.Project)
#set($stamp = $workflow.BuildLife.latestStamp())

Workflow: 
#if($stamp != "")
  $project.Name - $workflow.Name ($stamp):
#else
  $project.Name - $workflow.Name:
#end

#if($workflow.Status.equalsIgnoreCase("Complete"))
  Success
#else
  $workflow.Status
#end

## END SECTION Subject

## BEGIN SECTION Body

#if ( !$workflow )
#set($workflow = $request.WorkflowCase)
#end
#if($workflow.Status.equalsIgnoreCase("Complete"))
  Success
#else
  $workflow.Status
#end
#set($project = $workflow.Project)
#set($stamp = $workflow.BuildLife.latestStamp())
$project.Name - $workflow.Name #if($stamp != "") ($stamp) #end
$workflow.Url

## END SECTION Body]]]]><![CDATA[></template-text>
<description>A simple example of a velocity template for creating notification IMs for notification service.</description>
</template>
]]>' WHERE ID = -3 AND VERSION = 0;
      </sql>
    </change>
    <change number="22">
      <description>Add a guest user for anonymous access. The guest user is added with no permissions</description>
      <groovy file="4.1/ub_022_add_guest_user.groovy" />
    </change>
    <change number="23">
      <description>Update plugin versions to match the release versions shown in the UI</description>
      <groovy file="4.1/ub_023_update_plugin_versions.groovy" />
    </change>
    <change number="24">
      <description>Update built-in plugins to a state to work with plugin upgrading</description>
      <groovy file="4.1/ub_019_update_plugins_for_upgrade.groovy" />
    </change>
    <change number="25">
      <description>Remove the agent pools from process triggers</description>
      <sql separator=";">
        ALTER TABLE WORKFLOW_TRIGGER DROP COLUMN AGENT_POOL_ID;
      </sql>
    </change>
</change-set>