-- LICENSED MATERIALS - PROPERTY OF IBM CORP.
-- IBM URBANCODE BUILD
-- (C) COPYRIGHT IBM CORPORATION 2012, 2014. ALL RIGHTS RESERVED.
--
-- U.S. GOVERNMENT USERS RESTRICTED RIGHTS - USE, DUPLICATION OR DISCLOSURE RESTRICTED BY
-- GSA ADP SCHEDULE CONTRACT WITH IBM CORP.
CREATE TABLE ACTIVITY_FILTER (
    ID                  NUMERIC NOT NULL,
    VERSION             NUMERIC DEFAULT 0 NOT NULL,
    USER_ID             NUMERIC NOT NULL,
    NAME                VARCHAR2(255) NOT NULL,
    GROUP_BY            VARCHAR2(64),
    PRIMARY KEY (ID)
);

CREATE TABLE ACTIVITY_FILTER_CRITERIA (
    FILTER_ID           NUMERIC NOT NULL,
    FILTER_BY           VARCHAR2(64) NOT NULL,
    FILTER_VALUE        VARCHAR2(4000)
);

CREATE TABLE AGENT (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    HOST            VARCHAR2(255),
    PORT            NUMERIC NOT NULL,
    NAME            VARCHAR2(255),
    DESCRIPTION     VARCHAR2(4000),
    ENDPOINT_ID     VARCHAR2(50),
    THROUGHPUT      NUMERIC DEFAULT 1 NOT NULL,
    MAX_JOBS        NUMERIC DEFAULT 5 NOT NULL,
    ISIGNORED       NUMERIC DEFAULT 0 NOT NULL,
    ISCONFIGURED    NUMERIC DEFAULT 0 NOT NULL,
    ISDELETED       NUMERIC DEFAULT 0 NOT NULL,
    LAST_START_TIME TIMESTAMP,
    LAST_ONLINE_TIME TIMESTAMP
);

CREATE TABLE AGENT_DIM (
    ID                   VARCHAR2(36) NOT NULL PRIMARY KEY,
    ENDPOINT_ID          VARCHAR2(50) NOT NULL,
    NAME                 VARCHAR2(255) NOT NULL
);

CREATE TABLE AGENT_POOL (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    NAME            VARCHAR2(255),
    DESCRIPTION     VARCHAR2(255),
    RESOURCE_ID     VARCHAR2(36),
    DYNAMIC         NUMERIC DEFAULT 0 NOT NULL,
    DATA            CLOB
) LOB (DATA) STORE AS AP_DATA_LOB;

CREATE TABLE AGENT_POOL_ENDPOINTS (
    AGENT_POOL_ID NUMERIC NOT NULL,
    AGENT_ID        NUMERIC NOT NULL,
    PRIMARY KEY (AGENT_POOL_ID, AGENT_ID)
);

CREATE TABLE AGENT_PROPERTY (
    AGENT_ID        NUMERIC NOT NULL,
    NAME            VARCHAR2(255) NOT NULL,
    VALUE           VARCHAR2(400),
    LONG_VALUE      CLOB,
    SECURE          NUMERIC DEFAULT 0 NOT NULL,
    SERVER_SET      NUMERIC DEFAULT 1 NOT NULL,
    PRIMARY KEY (AGENT_ID, NAME)
) LOB (LONG_VALUE) STORE AS AP_LV_LOB;

CREATE TABLE AGENT_RELAY (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    NAME                   VARCHAR2(255),
    AGENT_RELAY_ID         VARCHAR2(255),
    DESCRIPTION            VARCHAR2(255),
    HOST                   VARCHAR2(128),
    ACTIVE                 NUMERIC DEFAULT 0,
    RESOURCE_ID            VARCHAR2(36)
);

CREATE TABLE ANNOUNCEMENT (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    MESSAGE         VARCHAR2(4000) NOT NULL,
    PRIORITY        NUMERIC NOT NULL,
    CREATED_TIME    TIMESTAMP DEFAULT SYSDATE NOT NULL
);

CREATE TABLE ARTIFACT_SET (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    NAME                   VARCHAR2(255),
    DESCRIPTION            VARCHAR2(255),
    INACTIVE               NUMERIC DEFAULT 0 NOT NULL
);

CREATE TABLE BUILD_CONFIG_DIM (
    ID                     VARCHAR2(36) NOT NULL PRIMARY KEY,
    BUILD_CONFIG_ID        VARCHAR2(36) NOT NULL,
    BUILD_CONFIG_NAME      VARCHAR2(255) NOT NULL
);

CREATE TABLE BUILD_CONFIGURATION (
    ID                      NUMERIC NOT NULL PRIMARY KEY,
    VERSION                 NUMERIC DEFAULT 0 NOT NULL,
    NAME                    VARCHAR2(255),
    DESCRIPTION             VARCHAR2(4000),
    BUILD_PROFILE_ID        NUMERIC NOT NULL,
    PROP_SHEET_ID           VARCHAR2(36) NOT NULL,
    INACTIVE                NUMERIC DEFAULT 0 NOT NULL,
    CONSTRAINT BC_NAME_PROFILE_UC UNIQUE(NAME, BUILD_PROFILE_ID)
);

CREATE TABLE BUILD_LIFE (
    ID                NUMERIC NOT NULL PRIMARY KEY,
    VERSION           NUMERIC DEFAULT 0 NOT NULL,
    START_DATE        TIMESTAMP,
    PROFILE_ID        NUMERIC,
    USER_ID           NUMERIC,
    REQUESTED_WORKSPACE_DATE TIMESTAMP,
    ACTUAL_WORKSPACE_DATE    TIMESTAMP,
    LATEST_STAMP_VALUE       VARCHAR2(255),
    LATEST_STATUS_ID  NUMERIC,
    INACTIVE          NUMERIC DEFAULT 0,
    PREFLIGHT         NUMERIC DEFAULT 0,
    DEPENDENCY_PLAN_ID NUMERIC
);

CREATE TABLE BUILD_LIFE_CHANGE_SET (
    BUILD_LIFE_ID       NUMERIC NOT NULL,
    CHANGE_SET_ID       NUMERIC NOT NULL,
    PRIMARY KEY (BUILD_LIFE_ID, CHANGE_SET_ID)
);

CREATE TABLE BUILD_LIFE_DEPENDENCY (
    BUILD_LIFE_ID   NUMERIC NOT NULL,
    SEQ             NUMERIC NOT NULL,
    DEPENDENCY_ID   NUMERIC,
    DEPENDENCY_CS_BUILD_LIFE_ID NUMERIC,
    PRIMARY KEY (BUILD_LIFE_ID, SEQ)
);

CREATE TABLE BUILD_LIFE_DEPENDENCY_PLAN (
    ID                  NUMERIC  NOT NULL PRIMARY KEY,
    VERSION             NUMERIC  DEFAULT 0 NOT NULL,
    DO_FAIL             NUMERIC NOT NULL,
    DO_WARN             NUMERIC NOT NULL,
    TRANSITIVE_ENABLED  NUMERIC NOT NULL,
    CONFLICT_MESSAGE    CLOB
) LOB (CONFLICT_MESSAGE) STORE AS BLDP_CM_LOB;

CREATE TABLE BUILD_LIFE_DEP_PLAN_RESOLUTION (
    PLAN_ID           NUMERIC  NOT NULL,
    DEP_LIFE_ID       NUMERIC,
    DEP_CS_LIFE_ID    NUMERIC,
    SET_ID            NUMERIC  NOT NULL,
    DIRECTORY         VARCHAR2(255),
    DO_SKIP           NUMERIC NOT NULL,
    TRANSITIVE        NUMERIC NOT NULL
);

CREATE TABLE BUILD_LIFE_DIM (
    ID                   VARCHAR2(36) NOT NULL PRIMARY KEY,
    BUILD_LIFE_ID        NUMERIC NOT NULL,
    BUILD_PROCESS        VARCHAR2(36) NOT NULL,
    CREATE_DATE          VARCHAR2(36) NOT NULL,
    CREATE_TIME          VARCHAR2(36) NOT NULL,
    BUILD_CONFIGURATION  VARCHAR2(36) DEFAULT NULL
);

CREATE TABLE BUILD_LIFE_LABEL (
    BUILD_PROFILE_ID    NUMERIC NOT NULL,
    LABEL_ID            NUMERIC NOT NULL,
    BUILD_LIFE_ID       NUMERIC NOT NULL,
    USER_ID             NUMERIC NOT NULL,
    DATE_ASSIGNED       TIMESTAMP NOT NULL,
    PRIMARY KEY (BUILD_PROFILE_ID, LABEL_ID)
);

CREATE TABLE BUILD_LIFE_LINK (
    BUILD_LIFE_ID       NUMERIC NOT NULL,
    SEQ                 NUMERIC NOT NULL,
    LINK_URL            VARCHAR2(1024),
    LINK_NAME           VARCHAR2(255),
    DESCRIPTION         VARCHAR2(1024),
    PRIMARY KEY (BUILD_LIFE_ID, SEQ)
);

CREATE TABLE BUILD_LIFE_NOTE (
    BUILD_LIFE_ID       NUMERIC NOT NULL,
    SEQ                 NUMERIC NOT NULL,
    USER_ID             NUMERIC,
    CREATE_DATE         TIMESTAMP,
    CONTENT             CLOB,
    PRIMARY KEY (BUILD_LIFE_ID, SEQ)
) LOB (CONTENT) STORE AS BLN_CONTENT_LOB;

CREATE TABLE BUILD_LIFE_PROPS (
    BUILD_LIFE_ID   NUMERIC NOT NULL,
    NAME            VARCHAR2(255) NOT NULL,
    VALUE           VARCHAR2(255),
    LONG_VALUE      CLOB,
    SECURE          NUMERIC DEFAULT 0 NOT NULL,
    PRIMARY KEY (BUILD_LIFE_ID, NAME)
) LOB (LONG_VALUE) STORE AS BLP_LV_LOB;

CREATE TABLE BUILD_LIFE_STAMP (
    BUILD_LIFE_ID   NUMERIC NOT NULL,
    SEQ             NUMERIC NOT NULL,
    VALUE           VARCHAR2(255) NOT NULL,
    STAMP_DATE      TIMESTAMP,
    JOB_TRACE_ID    NUMERIC,
    USER_ID         NUMERIC,
    PRIMARY KEY (BUILD_LIFE_ID, SEQ)
);

CREATE TABLE BUILD_LIFE_STATUS (
    BUILD_LIFE_ID   NUMERIC NOT NULL,
    SEQ             NUMERIC NOT NULL,
    STATUS_ID       NUMERIC,
    JOB_TRACE_ID    NUMERIC,
    MESSAGE         VARCHAR2(255),
    DATE_ASSIGNED   TIMESTAMP,
    USER_ID         NUMERIC,
    PRIMARY KEY (BUILD_LIFE_ID, SEQ)
);

CREATE TABLE BUILD_PROFILE (
    ID                    NUMERIC NOT NULL PRIMARY KEY,
    VERSION               NUMERIC DEFAULT 0 NOT NULL,
    NAME                  VARCHAR2(255),
    DESCRIPTION           VARCHAR2(255),
    PROJECT_ID            NUMERIC,
    WORKFLOW_ID           NUMERIC,
    TRIGGER_ONLY_DEPS     NUMERIC DEFAULT 0,
    DEP_CONFLICT_STRATEGY VARCHAR2(16) NOT NULL
);

CREATE TABLE BUILD_REQUEST (
    ID                      NUMERIC NOT NULL PRIMARY KEY,
    VERSION                 NUMERIC DEFAULT 0 NOT NULL,
    PROFILE_ID              NUMERIC,
    BUILD_LIFE              NUMERIC,
    WORKFLOW_ID             NUMERIC,
    USER_ID                 NUMERIC,
    REQUESTER_TYPE          VARCHAR2(32),
    REQUESTER_CLASS         VARCHAR2(255),
    REQUESTER_ID            NUMERIC,
    WORKSPACE_DATE          TIMESTAMP,
    QUIET_PERIOD_DATE       TIMESTAMP,
    START_DATE              TIMESTAMP,
    FORCED                  VARCHAR2(32),
    STATUS                  VARCHAR2(32),
    DELAY_UNTIL_DATE        TIMESTAMP,
    BATCH_ID                NUMERIC,
    SOURCE_CHANGE           NUMERIC DEFAULT 0,
    DEP_CHANGE              NUMERIC DEFAULT 0,
    PREFLIGHT               NUMERIC DEFAULT 0,
    PRIORITY                NUMERIC DEFAULT 0,
    BUILD_CONFIGURATION_ID  NUMERIC DEFAULT NULL
);

CREATE TABLE BUILD_REQUEST_PROPS (
    BUILD_REQUEST_ID  NUMERIC NOT NULL,
    NAME              VARCHAR2(255) NOT NULL,
    VALUE             VARCHAR2(400),
    LONG_VALUE        CLOB,
    SECURE            NUMERIC DEFAULT 0 NOT NULL,
    CASCADED_FLAG     NUMERIC DEFAULT 0 NOT NULL,
    PRIMARY KEY (BUILD_REQUEST_ID, NAME)
) LOB (LONG_VALUE) STORE AS BRP_LV_LOB;

CREATE TABLE BUILD_WORKFLOW_SUMMARY (
    ID                  NUMERIC NOT NULL PRIMARY KEY,
    VERSION             NUMERIC DEFAULT 0 NOT NULL,
    BUILD_LIFE_ID       NUMERIC NOT NULL,
    PROJECT_ID          NUMERIC NOT NULL,
    PROFILE_ID          NUMERIC NOT NULL,
    WORKFLOW_ID         NUMERIC NOT NULL,
    CASE_ID             NUMERIC NOT NULL,
    USER_ID             NUMERIC,
    START_DATE          TIMESTAMP,
    END_DATE            TIMESTAMP,
    AGENT_POOL_ID       NUMERIC,
    STATUS              VARCHAR2(20),
    REQUEST_ID          NUMERIC NOT NULL,
    REQUESTER_TYPE      VARCHAR2(32),
    REQUESTER_CLASS     VARCHAR2(255),
    REQUESTER_ID        NUMERIC,
    NUM_TESTS           NUMERIC DEFAULT 0,
    NUM_SUCCESSES       NUMERIC DEFAULT 0,
    NUM_ISSUES          NUMERIC DEFAULT 0,
    NUM_CHANGES         NUMERIC DEFAULT 0,
    NUM_FILES_CHANGED   NUMERIC DEFAULT 0,
    RESULT_INDICATOR    NUMERIC DEFAULT 0
);

CREATE TABLE CHANGE_SET_DIM (
    ID                  VARCHAR2(36) NOT NULL PRIMARY KEY,
    CHANGE_SET_ID       VARCHAR2(255) NOT NULL,
    SCM_ID              VARCHAR2(255),
    CHANGE_COMMENT      CLOB,
    CHANGE_MODULE       VARCHAR2(255),
    CHANGE_BRANCH       VARCHAR2(255),
    CHANGED_FILES       VARCHAR2(100) NOT NULL,
    CHANGE_DATE         VARCHAR2(36) NOT NULL,
    CHANGE_TIME         VARCHAR2(36) NOT NULL,
    SOURCE_CONFIG       VARCHAR2(36) NOT NULL,
    REPO_USER           VARCHAR2(36) NOT NULL
) LOB (CHANGE_COMMENT) STORE AS CSD_CC_LOB;

CREATE TABLE CHANGE_SET_ISSUE (
    ISSUE_ID            NUMERIC NOT NULL,
    CHANGE_SET_ID       NUMERIC NOT NULL,
    PRIMARY KEY (ISSUE_ID, CHANGE_SET_ID)
);

CREATE TABLE CHANGE_SET_ISSUE_FACT (
    CHANGE_SET      VARCHAR2(36) NOT NULL,
    ISSUE           VARCHAR2(36) NOT NULL
);

CREATE TABLE CHANGE_SET_PROPERTY (
    PROP_NAME       VARCHAR2(255) NOT NULL,
    PROP_VALUE      VARCHAR2(4000),
    CHANGE_SET      VARCHAR2(36) NOT NULL
);

CREATE TABLE CLEANUP_CONFIG (
    ID                    NUMERIC NOT NULL PRIMARY KEY,
    VERSION               NUMERIC DEFAULT 0 NOT NULL,
    NAME                  VARCHAR2(255),
    DESCRIPTION           VARCHAR2(255),
    DATA                  CLOB
) LOB (DATA) STORE AS CC_DATA_LOB;

CREATE TABLE CODE_COVERAGE_GROUP (
    REPORT                 VARCHAR2(36) NOT NULL,
    NAME                   VARCHAR2(255),
    LINE_PERC              VARCHAR2(6),
    METHOD_PERC            VARCHAR2(6),
    BRANCH_PERC            VARCHAR2(6),
    COMPLEXITY             VARCHAR2(19)
);

CREATE TABLE CODE_COVERAGE_REPORT_DIM (
    ID                     VARCHAR2(36) NOT NULL PRIMARY KEY,
    REPORT_ID              VARCHAR2(300) NOT NULL,
    REPORT_NAME            VARCHAR2(255) NOT NULL,
    BUILD_LIFE             VARCHAR2(36) NOT NULL,
    COVERAGE_TYPE          VARCHAR2(64) NOT NULL,
    LINE_PERC              VARCHAR2(6),
    METHOD_PERC            VARCHAR2(6),
    BRANCH_PERC            VARCHAR2(6),
    REPORT_DATE            VARCHAR2(36) NOT NULL,
    REPORT_TIME            VARCHAR2(36) NOT NULL
);

CREATE TABLE CODESTATION_BUILD_LIFE (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    CODESTATION_PROJECT_ID NUMERIC,
    USER_ID                NUMERIC,
    STAMP                  VARCHAR2(255),
    START_DATE             TIMESTAMP,
    DESCRIPTION            VARCHAR2(255)
);

CREATE TABLE CODESTATION_BUILD_LIFE_PROP (
    CODESTATION_BUILD_LIFE_ID     NUMERIC NOT NULL,
    NAME            VARCHAR2(255) NOT NULL,
    DESCRIPTION     VARCHAR2(255),
    VALUE           VARCHAR2(255),
    LONG_VALUE      CLOB,
    PRIMARY KEY (CODESTATION_BUILD_LIFE_ID, NAME)
) LOB (LONG_VALUE) STORE AS CBLP_LV_LOB;

CREATE TABLE CODESTATION_BUILD_LIFE_STATUS (
    CODESTATION_BUILD_LIFE_ID   NUMERIC NOT NULL,
    SEQ                         NUMERIC NOT NULL,
    STATUS_ID                   NUMERIC,
    USER_ID                     NUMERIC,
    DATE_ASSIGNED               TIMESTAMP,
    PRIMARY KEY (CODESTATION_BUILD_LIFE_ID, SEQ)
);

CREATE TABLE CODESTATION_PROJECT (
    ID                    NUMERIC NOT NULL PRIMARY KEY,
    VERSION               NUMERIC DEFAULT 0 NOT NULL,
    NAME                  VARCHAR2(255),
    DESCRIPTION           VARCHAR2(255),
    RESOURCE_ID           VARCHAR2(36)
);

CREATE TABLE CODESTATION_PROJECT_PROPERTY (
    CODESTATION_PROJECT_ID     NUMERIC NOT NULL,
    NAME            VARCHAR2(255) NOT NULL,
    DESCRIPTION     VARCHAR2(255),
    VALUE           VARCHAR2(255),
    LONG_VALUE      CLOB,
    PRIMARY KEY (CODESTATION_PROJECT_ID, NAME)
) LOB (LONG_VALUE) STORE AS CPP_LV_LOB;

CREATE TABLE CONFIG_OBJECT_DIM (
    ID               VARCHAR2(36) NOT NULL PRIMARY KEY,
    HANDLE           VARCHAR2(128) NOT NULL,
    OBJECT_TYPE      VARCHAR2(64) NOT NULL,
    OBJECT_ID        VARCHAR2(36) NOT NULL,
    OBJECT_NAME      VARCHAR2(255) NOT NULL
);

CREATE TABLE COOKIE_KEY (
    KEY_STRING      VARCHAR2(24) NOT NULL
);

CREATE TABLE DASHBOARD_COLUMN (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    VIEW_ID                NUMERIC NOT NULL,
    VIEW_INDEX             NUMERIC NOT NULL
);

CREATE TABLE DASHBOARD_VIEW (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    NAME                   VARCHAR2(255)
);

CREATE TABLE DASHBOARD_WIDGET (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    NAME                   VARCHAR2(255),
    WIDGET_TYPE            VARCHAR2(16) NOT NULL,
    PROP_SHEET_ID          VARCHAR2(36) NOT NULL,
    COLUMN_ID              NUMERIC NOT NULL,
    COLUMN_INDEX           NUMERIC NOT NULL
);

CREATE TABLE DATABASE_HISTORY (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    DESCRIPTION            VARCHAR2(255),
    USERNAME               VARCHAR2(64),
    HISTORY_DATE           TIMESTAMP NOT NULL
);

CREATE TABLE DATE_DIM (
    ID               VARCHAR2(36) NOT NULL PRIMARY KEY,
    DATE_VAL         VARCHAR2(12) NOT NULL,
    YEAR_NUM         VARCHAR2(6) NOT NULL,
    MONTH            VARCHAR2(2) NOT NULL,
    DAY_OF_WEEK      VARCHAR2(1) NOT NULL,
    DAY_OF_MONTH     VARCHAR2(2) NOT NULL
);

CREATE TABLE DB_VERSION (
    RELEASE_NAME  VARCHAR2(255) NOT NULL,
    VER           NUMERIC DEFAULT 0 NOT NULL
);

CREATE TABLE DEPENDENCY (
    ID                                NUMERIC NOT NULL PRIMARY KEY,
    VERSION                           NUMERIC DEFAULT 0 NOT NULL,
    DEPENDENT_ANTHILL_PROFILE_ID      NUMERIC,
    DEPENDENT_CS_PROJECT_ID           NUMERIC,
    DEPENDENCY_ANTHILL_PROFILE_ID     NUMERIC,
    DEPENDENCY_CS_PROJECT_ID          NUMERIC,
    DATA                              CLOB,
    BUILD_CONDITION                   NUMERIC,
    STATUS_ID                         NUMERIC,
    BUILD_LIFE_ID                     NUMERIC
) LOB (DATA) STORE AS DEPENDENCY_DATA_LOB;

CREATE TABLE FILE_CHANGE (
    CHANGE_TYPE     VARCHAR2(20),
    CHANGE_PATH     VARCHAR2(1024) NOT NULL,
    REVISION_NUMBER VARCHAR2(255),
    CHANGE_SET      VARCHAR2(36) NOT NULL
);

CREATE TABLE HI_LO_SEQ (
    SEQ_NAME        VARCHAR2(255) NOT NULL PRIMARY KEY,
    HI_VAL          NUMERIC DEFAULT 0 NOT NULL
);

CREATE TABLE ISSUE (
    ID                  NUMERIC NOT NULL,
    VER                 NUMERIC DEFAULT 0 NOT NULL,
    ISSUE_TRACKER_ID    NUMERIC NOT NULL,
    ISSUE_ID            VARCHAR2(255) NOT NULL,
    NAME                VARCHAR2(512) NOT NULL,
    TYPE                VARCHAR2(128),
    STATUS              VARCHAR2(128),
    DESCRIPTION         CLOB,
    LAST_DATE           TIMESTAMP,
    ISSUE_URL           VARCHAR2(512),
    PRIMARY KEY (ID)
) LOB (DESCRIPTION) STORE AS ISSUE_DESCRIPTION_LOB;

CREATE TABLE ISSUE_DIM (
    ID                  VARCHAR2(36)   NOT NULL PRIMARY KEY,
    ISSUE_ID            VARCHAR2(255)  NOT NULL,
    NAME                VARCHAR2(512)  NOT NULL,
    TYPE                VARCHAR2(128),
    STATUS              VARCHAR2(128),
    OWNER               VARCHAR2(128),
    DESCRIPTION         CLOB,
    URL                 VARCHAR2(4000),
    LAST_DATE           VARCHAR2(36)   NOT NULL,
    LAST_TIME           VARCHAR2(36)   NOT NULL,
    ISSUE_TRACKER       VARCHAR2(36)   NOT NULL
) LOB (DESCRIPTION) STORE AS ID_DESCRIPTION_LOB;

CREATE TABLE ISSUE_PROPERTY (
    PROP_NAME       VARCHAR2(255) NOT NULL,
    PROP_VALUE      VARCHAR2(4000),
    ISSUE           VARCHAR2(36) NOT NULL
);

CREATE TABLE ISSUE_TRACKER (
    ID                  NUMERIC NOT NULL,
    VER                 NUMERIC DEFAULT 0 NOT NULL,
    NAME                VARCHAR2(512) NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE ISSUE_TRACKER_DIM (
    ID          VARCHAR2(36)  NOT NULL PRIMARY KEY,
    NAME        VARCHAR2(512) NOT NULL
);

CREATE TABLE JOB_CONFIG (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    NAME                   VARCHAR2(255),
    DESCRIPTION            VARCHAR2(4000),
    HIDDEN                 NUMERIC DEFAULT 0,
    INACTIVE               NUMERIC DEFAULT 0,
    RESOURCE_ID            VARCHAR2(36)
);

CREATE TABLE JOB_CONFIG_STEP (
     ID                           NUMERIC NOT NULL PRIMARY KEY,
     VERSION                      NUMERIC DEFAULT 0 NOT NULL,
     JOB_CONFIG_ID                NUMERIC  NOT NULL,
     SEQ                          NUMERIC NOT NULL,
     CLASS                        VARCHAR2(255) NOT NULL,
     PLUGIN_COMMAND_ID            VARCHAR2(36),
     PROP_SHEET_ID                VARCHAR2(36),
     NAME                         VARCHAR2(255) NOT NULL,
     DESCRIPTION                  VARCHAR2(4000),
     IGNORE_FAILURES              NUMERIC NOT NULL,
     TIMEOUT                      NUMERIC NOT NULL,
     ACTIVE                       NUMERIC NOT NULL,
     RUN_IN_PREFLIGHT             NUMERIC DEFAULT 1 NOT NULL,
     RUN_IN_PREFLIGHT_ONLY        NUMERIC DEFAULT 0 NOT NULL,
     RUN_IN_PARALLEL              NUMERIC DEFAULT 0 NOT NULL,
     STEP_PRE_CONDITION_SCRIPT_ID NUMERIC,
     POST_PROCESS_SCRIPT_ID       NUMERIC,
     STAMP                        VARCHAR2(4000),
     STATUS_ID                    NUMERIC,
     WORK_DIR_SCRIPT_ID           NUMERIC,
     DATA                         CLOB
) LOB (DATA) STORE AS JCS_DATA_LOB;

CREATE TABLE JOB_CONFIG_STEP_CUSTOM_PROP (
     JOB_CONFIG_STEP_ID          NUMERIC NOT NULL,
     NAME                        VARCHAR2(255) NOT NULL,
     VALUE                       CLOB NOT NULL
) LOB (VALUE) STORE AS JCSCP_VALUE_LOB;

CREATE TABLE JOB_DIM (
    ID                   VARCHAR2(36) NOT NULL PRIMARY KEY,
    JOB_ID               NUMERIC NOT NULL,
    NAME                 VARCHAR2(255) NOT NULL
);

CREATE TABLE JOB_EXECUTION (
    JOB_INSTANCE_ID   NUMERIC NOT NULL,
    JOB               VARCHAR2(36) NOT NULL,
    AGENT             VARCHAR2(36),
    PROJECT           VARCHAR2(36) NOT NULL,
    PROCESS_EXECUTION VARCHAR2(36),
    QUEUE_DATE        VARCHAR2(36) NOT NULL,
    QUEUE_TIME        VARCHAR2(36) NOT NULL,
    START_DATE        VARCHAR2(36) NOT NULL,
    START_TIME        VARCHAR2(36) NOT NULL,
    END_DATE          VARCHAR2(36) NOT NULL,
    END_TIME          VARCHAR2(36) NOT NULL,
    QUEUE_DURATION    NUMERIC NOT NULL,
    EXEC_DURATION     NUMERIC NOT NULL,
    RESULT            VARCHAR2(10) NOT NULL
);

CREATE TABLE JOB_PRE_CONDITION_SCRIPT (
    ID                    NUMERIC NOT NULL PRIMARY KEY,
    VERSION               NUMERIC DEFAULT 0 NOT NULL,
    NAME                  VARCHAR2(255) NOT NULL,
    DESCRIPTION           VARCHAR2(255),
    LANGUAGE              VARCHAR2(64),
    SCRIPT                CLOB NOT NULL,
    CAN_DELETE            NUMERIC DEFAULT 1 NOT NULL,
    INACTIVE              NUMERIC DEFAULT 0 NOT NULL
) LOB (SCRIPT) STORE AS JPCS_SCRIPT_LOB;

CREATE TABLE JOB_STEP_TRACE (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VER             NUMERIC DEFAULT 0 NOT NULL,
    JOB_TRACE_ID    NUMERIC NOT NULL,
    STEP_SEQ        INTEGER,
    NAME            VARCHAR2(255),
    START_DATE      TIMESTAMP,
    END_DATE        TIMESTAMP,
    STATUS          VARCHAR2(20),
    IGNORE_FAILURES NUMERIC DEFAULT 0 NOT NULL,
    PARALLEL_EXEC   NUMERIC DEFAULT 0 NOT NULL
);

CREATE TABLE JOB_STEP_TRACE_PROP (
    STEP_ID            NUMERIC NOT NULL,
    NAME               VARCHAR2(255) NOT NULL,
    VALUE              CLOB,
    SECURE             NUMERIC DEFAULT 0,
    PRIMARY KEY (STEP_ID, NAME)
) LOB (VALUE) STORE AS JSTP_VALUE_LOB;

CREATE TABLE JOB_TRACE (
    ID                  NUMERIC NOT NULL PRIMARY KEY,
    VER                 NUMERIC DEFAULT 0 NOT NULL,
    CLASS               VARCHAR2(255),
    START_DATE          TIMESTAMP,
    END_DATE            TIMESTAMP,
    STATUS              VARCHAR2(20),
    REQUESTER_CLASS     VARCHAR2(255),
    REQUESTER_ID        NUMERIC,
    REQUESTER_TYPE      VARCHAR2(20),
    PROJECT_ID          NUMERIC,
    BUILD_PROFILE_ID    NUMERIC,
    WORKFLOW_DEF_JOB_CONFIG_ID NUMERIC,
    JOB_NAME            VARCHAR2(255),
    WORKFLOW_CASE_ID    NUMERIC,
    AGENT_ID            NUMERIC,
    ITERATION           NUMERIC,
    PRIORITY            NUMERIC DEFAULT 0
);

CREATE TABLE JOB_TRACE_PROPS (
    JOB_TRACE_ID    NUMERIC NOT NULL,
    NAME            VARCHAR2(255) NOT NULL,
    VALUE           VARCHAR2(400),
    LONG_VALUE      CLOB,
    SECURE          NUMERIC DEFAULT 0,
    PRIMARY KEY (JOB_TRACE_ID, NAME)
) LOB (LONG_VALUE) STORE AS JTP_LV_LOB;

CREATE TABLE LABEL (
    ID              NUMERIC NOT NULL,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    NAME            VARCHAR2(255) NOT NULL UNIQUE,
    DESCRIPTION     VARCHAR2(4000),
    PRIMARY KEY (ID)
);

CREATE TABLE LOCK_HOLDER (
    ID                        NUMERIC NOT NULL PRIMARY KEY,
    VERSION                   NUMERIC DEFAULT 0 NOT NULL,
    HOLDER_CLASS              VARCHAR2(255) NOT NULL,
    HOLDER_ID                 NUMERIC NOT NULL
);

CREATE TABLE LOCK_HOLDER_LOCK_RES (
    LOCK_ID                   NUMERIC NOT NULL,
    LOCK_RES_ID               NUMERIC DEFAULT 0 NOT NULL,
    IS_EXCLUSIVE              NUMERIC DEFAULT 0 NOT NULL
);

CREATE TABLE LOCK_RES (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    NAME            VARCHAR2(255),
    DESCRIPTION     VARCHAR2(255),
    MAX_LOCK_HOLDERS NUMERIC NOT NULL,
    RES_TYPE        VARCHAR2(32) DEFAULT 'GENERIC',
    LAST_USED       TIMESTAMP DEFAULT SYSDATE NOT NULL
);

CREATE TABLE MAVEN_REPOSITORY (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    NAME            VARCHAR2(64) NOT NULL,
    DESCRIPTION     VARCHAR2(255),
    URL             VARCHAR2(255) NOT NULL,
    PROXY_ID        NUMERIC,
    USERNAME        VARCHAR2(255),
    PASSWORD        VARCHAR2(255),
    VERIFY_HASHES   NUMERIC DEFAULT 1
);

CREATE TABLE NOTIFICATION_RECIPIENT_GEN (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    CLASS           VARCHAR2(255) NOT NULL,
    NAME            VARCHAR2(255) NOT NULL,
    DESCRIPTION     VARCHAR2(255),
    DATA            CLOB
) LOB (DATA) STORE AS NRG_DATA_LOB;

CREATE TABLE NOTIFICATION_SCHEME (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    NAME            VARCHAR2(255),
    DESCRIPTION     VARCHAR2(255)
);

CREATE TABLE NOTIFICATION_SCHEME_WHO_WHEN (
    SCHEME_ID                NUMERIC NOT NULL,
    SEQ                      NUMERIC NOT NULL,
    WHO_GENERATOR_CLASS      VARCHAR2(255),
    WHO_GENERATOR_ID         NUMERIC,
    WHO_CC_GENERATOR_CLASS   VARCHAR2(255),
    WHO_CC_GENERATOR_ID      NUMERIC,
    WHO_BCC_GENERATOR_CLASS  VARCHAR2(255),
    WHO_BCC_GENERATOR_ID     NUMERIC,
    WHEN_GENERATOR_CLASS     VARCHAR2(255),
    WHEN_GENERATOR_ID        NUMERIC,
    PRIMARY KEY (SCHEME_ID, SEQ)
);

CREATE TABLE NOT_SCHEME_WHO_WHEN_MEDIUM (
    SCHEME_ID             NUMERIC NOT NULL,
    WHO_WHEN_SEQ          NUMERIC NOT NULL,
    SEQ                   NUMERIC NOT NULL,
    MEDIUM_NAME           VARCHAR2(255),
    TEMPLATE_ID           NUMERIC,
    PRIMARY KEY (SCHEME_ID, WHO_WHEN_SEQ, SEQ)
);

CREATE TABLE NOTIFICATION_SUBSCRIPTION (
    ID                  NUMERIC NOT NULL PRIMARY KEY,
    VERSION             NUMERIC DEFAULT 0 NOT NULL,
    USER_ID             NUMERIC NOT NULL,
    SUBSCRIBED_CLASS    VARCHAR2(255) NOT NULL,
    SUBSCRIBED_ID       NUMERIC NOT NULL,
    EVENT               VARCHAR2(36) NOT NULL,
    CONSTRAINT NS_USER_CLASS_ID_UC UNIQUE(USER_ID, SUBSCRIBED_CLASS, SUBSCRIBED_ID)
);

CREATE TABLE OBJECT_CONFIG_AUDITING (
    ACTION           VARCHAR2(6) NOT NULL,
    OLD_VALUE        VARCHAR2(4000),
    NEW_VALUE        VARCHAR2(4000),
    DESCRIPTION      VARCHAR2(4000),
    ACTION_USER      VARCHAR2(36) NOT NULL,
    CONFIG_OBJECT    VARCHAR2(36) NOT NULL,
    ACTION_DATE      VARCHAR2(36) NOT NULL,
    ACTION_TIME      VARCHAR2(36) NOT NULL
);

CREATE TABLE POST_PROCESS_SCRIPT (
    ID                    NUMERIC NOT NULL PRIMARY KEY,
    VERSION               NUMERIC DEFAULT 0 NOT NULL,
    NAME                  VARCHAR2(255) NOT NULL,
    DESCRIPTION           VARCHAR2(255),
    LANGUAGE              VARCHAR2(64),
    SCRIPT                CLOB NOT NULL,
    CAN_DELETE            NUMERIC DEFAULT 1 NOT NULL,
    INACTIVE              NUMERIC DEFAULT 0 NOT NULL
) LOB (SCRIPT) STORE AS PPS_SCRIPT_LOB;

CREATE TABLE PROCESS_DIM (
    ID               VARCHAR2(36) NOT NULL PRIMARY KEY,
    PROCESS_ID       VARCHAR2(36) NOT NULL,
    PROCESS_NAME     VARCHAR2(255) NOT NULL,
    PROJECT          VARCHAR2(36) NOT NULL,
    PROCESS_TEMPLATE VARCHAR2(36) NOT NULL
);

CREATE TABLE PROCESS_EXECUTION (
    PROCESS_ID       NUMERIC NOT NULL,
    PROCESS          VARCHAR2(36) NOT NULL,
    BUILD_LIFE       VARCHAR2(36) NOT NULL,
    REQUEST_DATE     VARCHAR2(36) NOT NULL,
    REQUEST_TIME     VARCHAR2(36) NOT NULL,
    START_DATE       VARCHAR2(36) NOT NULL,
    START_TIME       VARCHAR2(36) NOT NULL,
    END_DATE         VARCHAR2(36) NOT NULL,
    END_TIME         VARCHAR2(36) NOT NULL,
    REQUEST_USER     VARCHAR2(36) NOT NULL,
    REQUEST_SOURCE   VARCHAR2(10) NOT NULL,
    DURATION         NUMERIC NOT NULL,
    RESULT           VARCHAR2(10) NOT NULL,
    RELATIVE_RESULT  VARCHAR2(20)
);

CREATE TABLE PROCESS_TEMPLATE_DIM (
    ID               VARCHAR2(36) NOT NULL PRIMARY KEY,
    TEMPLATE_ID      VARCHAR2(36) NOT NULL,
    TEMPLATE_NAME    VARCHAR2(255) NOT NULL,
    PROCESS_TYPE     VARCHAR2(12) NOT NULL
);

CREATE TABLE PROJECT (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    NAME                   VARCHAR2(255),
    DESCRIPTION            VARCHAR2(999),
    AGENT_ID               NUMERIC,
    INACTIVE               NUMERIC DEFAULT 0,
    PROJECT_TEMPLATE_ID    NUMERIC NOT NULL,
    RESOURCE_ID            VARCHAR2(36)
);

CREATE TABLE PROJECT_DIM (
    ID               VARCHAR2(36) NOT NULL PRIMARY KEY,
    PROJECT_ID       VARCHAR2(36) NOT NULL,
    PROJECT_NAME     VARCHAR2(255) NOT NULL,
    PROJECT_TEMPLATE VARCHAR2(36) NOT NULL
);

CREATE TABLE PROJECT_PROPERTY (
    PROJECT_ID      NUMERIC NOT NULL,
    NAME            VARCHAR2(255) NOT NULL,
    DESCRIPTION     VARCHAR2(255),
    VALUE           VARCHAR2(255),
    LONG_VALUE      CLOB,
    PASS_TO_BUILDER NUMERIC DEFAULT 0,
    SECURE          NUMERIC DEFAULT 0,
    PRIMARY KEY (PROJECT_ID, NAME)
) LOB (LONG_VALUE) STORE AS PP_LV_LOB;

CREATE TABLE PROJECT_TAG (
    PROJECT_ID             NUMERIC NOT NULL,
    TAG                    VARCHAR2(255) NOT NULL,
    PRIMARY KEY (PROJECT_ID, TAG)
);

CREATE TABLE PROJECT_TEMPLATE (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    NAME                   VARCHAR2(255) NOT NULL,
    DESCRIPTION            VARCHAR2(4000),
    DATA                   CLOB,
    INACTIVE               NUMERIC DEFAULT 0,
    RESOURCE_ID            VARCHAR2(36)
) LOB (DATA) STORE AS PT_DATA_LOB;

CREATE TABLE PROJECT_TEMPLATE_DIM (
    ID               VARCHAR2(36) NOT NULL PRIMARY KEY,
    TEMPLATE_ID      VARCHAR2(36) NOT NULL,
    TEMPLATE_NAME    VARCHAR2(255) NOT NULL
);

CREATE TABLE PROPERTY (
    OWNER_ID               NUMERIC NOT NULL,
    OWNER_CLASS            VARCHAR2(255) NOT NULL,
    NAME                   VARCHAR2(255) NOT NULL,
    DESCRIPTION            VARCHAR2(255),
    VALUE                  VARCHAR2(400),
    LONG_VALUE             CLOB,
    SECURE                 NUMERIC DEFAULT 0,
    PRIMARY KEY (OWNER_ID, OWNER_CLASS, NAME)
) LOB (LONG_VALUE) STORE AS PROPERTY_LV_LOB;

CREATE TABLE PROPERTY_TEMPLATE (
    OWNER_ID               NUMERIC NOT NULL,
    OWNER_CLASS            VARCHAR2(255) NOT NULL,
    NAME                   VARCHAR2(255) NOT NULL,
    SEQ                    NUMERIC NOT NULL,
    DESCRIPTION            VARCHAR2(4000),
    LABEL                  VARCHAR2(255),
    REQUIRED               NUMERIC DEFAULT 0 NOT NULL,
    SECURE                 NUMERIC DEFAULT 0 NOT NULL,
    VALUE                  VARCHAR2(400),
    LONG_VALUE             CLOB,
    DATA                   CLOB NOT NULL,
    PRIMARY KEY (OWNER_ID, OWNER_CLASS, NAME)
) LOB (LONG_VALUE) STORE AS PT_LV_LOB,
 LOB (DATA) STORE AS PT_DATA_2_LOB;

CREATE TABLE PROXY (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    NAME            VARCHAR2(64) NOT NULL,
    DESCRIPTION     VARCHAR2(255),
    HOST            VARCHAR2(255) NOT NULL,
    PORT            NUMERIC NOT NULL,
    USERNAME        VARCHAR2(64),
    PASSWORD        VARCHAR2(64)
);

CREATE TABLE REPO_USER_DIM (
    ID                  VARCHAR2(36) NOT NULL PRIMARY KEY,
    REPO_USER_ID        VARCHAR2(36) NOT NULL,
    REPO_USER_NAME      VARCHAR2(255) NOT NULL,
    REPOSITORY          VARCHAR2(36) NOT NULL
);

CREATE TABLE REPOSITORY (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    NAME            VARCHAR2(255) NOT NULL,
    DESCRIPTION     VARCHAR2(4000),
    PLUGIN_ID       VARCHAR2(36),
    PROP_SHEET_ID   VARCHAR2(36) NOT NULL,
    INACTIVE        NUMERIC DEFAULT 0,
    RESOURCE_ID     VARCHAR2(36)
);

CREATE TABLE REPOSITORY_DIM (
   ID           VARCHAR2(36) NOT NULL PRIMARY KEY,
   REPO_ID      VARCHAR2(36) NOT NULL,
   REPO_NAME    VARCHAR2(255) NOT NULL,
   REPO_TYPE    VARCHAR2(255) NOT NULL
);

CREATE TABLE REPOSITORY_LISTENER (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    CLASS           VARCHAR2(255),
    DATA            CLOB
) LOB (DATA) STORE AS RL_DATA_LOB;

CREATE TABLE REPOSITORY_TRIGGER (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    REPOSITORY_ID   NUMERIC NOT NULL,
    TRIGGER_CODE_ID NUMERIC NOT NULL,
    INACTIVE        NUMERIC DEFAULT 0,
    PRIORITY        NUMERIC DEFAULT 0
);

CREATE TABLE REPOSITORY_USERS (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    DATA            CLOB
) LOB (DATA) STORE AS RU_DATA_LOB;

CREATE TABLE REPOSITORY_USER (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    NAME            VARCHAR2(255) NOT NULL,
    REPO_ID         NUMERIC NOT NULL
);

CREATE TABLE REPOSITORY_CHANGE_SET (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    REPO_ID         NUMERIC NOT NULL,
    REPO_USER_ID    NUMERIC NOT NULL,
    CHANGE_ID       VARCHAR2(255),
    CHANGE_DATE     TIMESTAMP,
    CHANGE_COMMENT  CLOB,
    FILES_ADDED     NUMERIC,
    FILES_CHANGED   NUMERIC,
    FILES_MOVED     NUMERIC,
    FILES_REMOVED   NUMERIC,
    MODULE          VARCHAR2(255),
    BRANCH          VARCHAR2(255)
) LOB (CHANGE_COMMENT) STORE AS RCS_CC_LOB;

CREATE TABLE REPOSITORY_CHANGE_SET_PROPERTY (
    CHANGE_SET_ID   NUMERIC NOT NULL,
    PROP_NAME       VARCHAR2(255) NOT NULL,
    VALUE           VARCHAR2(400),
    LONG_VALUE      CLOB,
    PRIMARY KEY (CHANGE_SET_ID, PROP_NAME)
) LOB (LONG_VALUE) STORE AS RCSP_LV_LOB;

CREATE TABLE REPOSITORY_CHANGE (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    CHANGE_SET_ID   NUMERIC NOT NULL,
    CHANGE_PATH     VARCHAR2(2048),
    CHANGE_TYPE     VARCHAR2(64),
    LINES_ADDED     NUMERIC,
    LINES_REMOVED   NUMERIC,
    REVISION_NUMBER VARCHAR2(255)
);

CREATE TABLE REQUEST_PLAN (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    NAME            VARCHAR2(255) NOT NULL,
    DESCRIPTION     VARCHAR2(4000),
    WORKFLOW_ID     NUMERIC,
    RESOURCE_ID     VARCHAR2(36)
);

CREATE TABLE REQUEST_PLAN_PROP (
    REQUEST_PLAN_ID     NUMERIC NOT NULL,
    NAME                VARCHAR2(255) NOT NULL,
    VALUE               VARCHAR2(400),
    LONG_VALUE          CLOB,
    PRIMARY KEY (REQUEST_PLAN_ID, NAME)
) LOB (LONG_VALUE) STORE AS RPP_LV_LOB;

CREATE TABLE SCHEDULE (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    CLASS           VARCHAR2(255),
    DATA            CLOB,
    NAME            VARCHAR2(255),
    DESCRIPTION     VARCHAR2(255),
    INACTIVE        NUMERIC DEFAULT 0 NOT NULL
) LOB (DATA) STORE AS SCHEDULE_DATA_LOB;

CREATE TABLE SCHEDULE_SCHEDULABLE (
    SCHEDULE_ID     NUMERIC NOT NULL,
    TARGET_CLASS    VARCHAR2(255) NOT NULL,
    TARGET_ID       NUMERIC NOT NULL,
    PRIMARY KEY (SCHEDULE_ID, TARGET_CLASS, TARGET_ID)
);

CREATE TABLE SCRIPT (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    NAME            VARCHAR2(255),
    DESCRIPTION     VARCHAR2(255),
    LANGUAGE        VARCHAR2(255),
    SCRIPT          CLOB
) LOB (SCRIPT) STORE AS SCRIPT_SCRIPT_LOB;

CREATE TABLE SINGLETON (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    CLASS           VARCHAR2(255),
    DATA            CLOB
) LOB (DATA) STORE AS SINGLETON_DATA_LOB;

CREATE TABLE SOURCE_ANALYTIC (
    REPORT                 VARCHAR2(36) NOT NULL,
    FINDING_ID             VARCHAR2(255),
    NAME                   VARCHAR2(255),
    FILE_NAME              VARCHAR2(1000),
    LINE_NUMBER            VARCHAR2(255),
    STATUS                 VARCHAR2(255),
    SEVERITY               VARCHAR2(255),
    FINDING_URL_LINK       VARCHAR2(255),
    DESCRIPTION            CLOB
) LOB (DESCRIPTION) STORE AS SA_DESCRIPTION_LOB;

CREATE TABLE SOURCE_ANALYTIC_SUMMARY (
    REPORT                 VARCHAR2(36) NOT NULL,
    NAME                   VARCHAR2(512) NOT NULL,
    SEVERITY               VARCHAR2(255) NOT NULL,
    FINDING_COUNT          NUMERIC NOT NULL,
    FINDING_URL_LINK       VARCHAR2(512),
    DESCRIPTION            CLOB
) LOB (DESCRIPTION) STORE AS SAS_DESCRIPTION_LOB;

CREATE TABLE SOURCE_ANALYTIC_REPORT_DIM (
    ID                     VARCHAR2(36) NOT NULL PRIMARY KEY,
    REPORT_ID              VARCHAR2(300) NOT NULL,
    REPORT_NAME            VARCHAR2(255) NOT NULL,
    BUILD_LIFE             VARCHAR2(36) NOT NULL,
    TYPE                   VARCHAR2(64) NOT NULL,
    URL_LINK               VARCHAR2(255),
    REPORT_DATE            VARCHAR2(36) NOT NULL,
    REPORT_TIME            VARCHAR2(36) NOT NULL
);

CREATE TABLE SOURCE_CHANGE (
    CHANGE_SET      VARCHAR2(36) NOT NULL,
    BUILD_LIFE      VARCHAR2(36) NOT NULL
);

CREATE TABLE SOURCE_CONFIG (
    ID                 NUMERIC NOT NULL PRIMARY KEY,
    VERSION            NUMERIC DEFAULT 0 NOT NULL,
    NAME               VARCHAR2(255) NOT NULL,
    DESCRIPTION        VARCHAR2(4000),
    PLUGIN_ID          VARCHAR2(36),
    PROP_SHEET_ID      VARCHAR2(36),
    BUILD_PROFILE_ID   NUMERIC,
    SEQ                NUMERIC NOT NULL,
    WORK_DIR_SCRIPT_ID NUMERIC,
    TEMPLATE_ID        NUMERIC,
    DATA               CLOB
) LOB (DATA) STORE AS SC_DATA_LOB;

CREATE TABLE SOURCE_CONFIG_DIM (
    ID                    VARCHAR2(36)  NOT NULL PRIMARY KEY,
    SOURCE_CONFIG_ID      VARCHAR2(36)  NOT NULL,
    SOURCE_CONFIG_NAME    VARCHAR2(255) NOT NULL,
    REPOSITORY            VARCHAR2(36)  NOT NULL
);

CREATE TABLE SOURCE_CONFIG_TEMPLATE (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    NAME                   VARCHAR2(255) NOT NULL,
    DESCRIPTION            VARCHAR2(4000),
    SOURCE_CONFIG_ID       NUMERIC NOT NULL,
    PLUGIN_ID              VARCHAR2(36) NOT NULL,
    RESOURCE_ID            VARCHAR2(36)
);

CREATE TABLE STATUS (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    LOCKED          NUMERIC,
    NAME            VARCHAR2(255) NOT NULL,
    COLOR           VARCHAR2(16),
    DESCRIPTION     CLOB,
    SEQ             NUMERIC,
    INACTIVE        NUMERIC DEFAULT 0
) LOB (DESCRIPTION) STORE AS STATUS_DESCRIPTION_LOB;

CREATE TABLE STEP_PRE_CONDITION_SCRIPT (
    ID                    NUMERIC NOT NULL PRIMARY KEY,
    VERSION               NUMERIC DEFAULT 0 NOT NULL,
    NAME                  VARCHAR2(255) NOT NULL,
    DESCRIPTION           VARCHAR2(255),
    LANGUAGE              VARCHAR2(64),
    SCRIPT                CLOB NOT NULL,
    CAN_DELETE            NUMERIC DEFAULT 1 NOT NULL,
    INACTIVE              NUMERIC DEFAULT 0 NOT NULL
) LOB (SCRIPT) STORE AS SPCS_SCRIPT_LOB;

CREATE TABLE TEMPLATE (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    CLASS           VARCHAR2(255),
    DATA            CLOB,
    INACTIVE        NUMERIC DEFAULT 0
) LOB (DATA) STORE AS TEMPLATE_DATA_LOB;

CREATE TABLE TEST_DIM (
    ID               VARCHAR2(36) NOT NULL PRIMARY KEY,
    TEST_ID          VARCHAR2(2000) NOT NULL,
    TEST_NAME        VARCHAR2(512) NOT NULL,
    TEST_SUITE       VARCHAR2(512) NOT NULL,
    TEST_TYPE        VARCHAR2(20) NOT NULL
);

CREATE TABLE TEST_INSTANCE (
    TEST             VARCHAR2(36) NOT NULL,
    REPORT           VARCHAR2(36) NOT NULL,
    RESULT           VARCHAR2(10) NOT NULL,
    DURATION         NUMERIC,
    MESSAGE          CLOB
) LOB (MESSAGE) STORE AS TI_MESSAGE_LOB;

CREATE TABLE TEST_REPORT_DIM (
    ID               VARCHAR2(36) NOT NULL PRIMARY KEY,
    REPORT_ID        VARCHAR2(300) NOT NULL,
    REPORT_NAME      VARCHAR2(255) NOT NULL,
    BUILD_LIFE       VARCHAR2(36) NOT NULL,
    REPORT_DATE      VARCHAR2(36) NOT NULL,
    REPORT_TIME      VARCHAR2(36) NOT NULL
);

CREATE TABLE TIME_DIM (
    ID               VARCHAR2(36) NOT NULL PRIMARY KEY,
    TIME_VAL         VARCHAR2(8) NOT NULL,
    HOUR_OF_DAY      VARCHAR2(2) NOT NULL,
    MINUTE_OF_HOUR   VARCHAR2(2) NOT NULL,
    SECOND_OF_MINUTE VARCHAR2(2) NOT NULL
);

CREATE TABLE TRIGGER_CODE (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    CODE            VARCHAR2(255) NOT NULL,
    OWNER_CLASS     VARCHAR2(255) NOT NULL,
    OWNER_ID        NUMERIC NOT NULL
);

CREATE TABLE UBUILD_USER (
    ID                NUMERIC NOT NULL PRIMARY KEY,
    NAME              VARCHAR2(64) NOT NULL,
    SEC_USER_ID       VARCHAR2(36),
    AUTH_REALM_ID     VARCHAR2(36),
    CAN_DELETE        NUMERIC DEFAULT 0,
    INACTIVE          NUMERIC DEFAULT 0,
    ACTUAL_NAME       VARCHAR2(255),
    TIME_ZONE         VARCHAR2(255),
    SHORT_DATE_FORMAT VARCHAR2(255) DEFAULT NULL,
    USE_24_HOUR_TIME  NUMERIC DEFAULT NULL,
    EMAIL             VARCHAR2(255),
    IM_ID             VARCHAR2(255),
    DATA              CLOB
) LOB (DATA) STORE AS UU_DATA_LOB;

CREATE TABLE USER_ANNOUNCEMENT (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    ANNOUNCEMENT_ID NUMERIC NOT NULL,
    SEEN            NUMERIC DEFAULT 0,
    USER_ID         NUMERIC NOT NULL
);

CREATE TABLE USER_DIM (
    ID               VARCHAR2(36) NOT NULL PRIMARY KEY,
    USER_ID          VARCHAR2(255) NOT NULL,
    USER_NAME        VARCHAR2(255) NOT NULL,
    ACTUAL_NAME      VARCHAR2(255),
    EMAIL            VARCHAR2(255),
    IM               VARCHAR2(255),
    AUTH_REALM_ID    VARCHAR2(36) NOT NULL,
    AUTH_REALM_NAME  VARCHAR2(255) NOT NULL
);

CREATE TABLE USER_REPO_NAME (
    USER_ID         NUMERIC NOT NULL,
    SEQ             NUMERIC NOT NULL,
    REPO            NUMERIC,
    NAME            VARCHAR2(255),
    PRIMARY KEY (USER_ID, SEQ)
);

CREATE TABLE WORK_DIR_SCRIPT (
    ID                    NUMERIC NOT NULL PRIMARY KEY,
    VERSION               NUMERIC DEFAULT 0 NOT NULL,
    NAME                  VARCHAR2(255) NOT NULL,
    DESCRIPTION           VARCHAR2(255),
    PATH                  CLOB NOT NULL,
    CAN_DELETE            NUMERIC DEFAULT 1 NOT NULL,
    INACTIVE              NUMERIC DEFAULT 0 NOT NULL
) LOB (PATH) STORE AS WDS_PATH_LOB;

CREATE TABLE WORKFLOW (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    NAME                   VARCHAR2(255),
    DESCRIPTION            VARCHAR2(255),
    HIDDEN                 NUMERIC DEFAULT 0,
    PROJECT_ID             NUMERIC,
    NOTIFICATION_SCHEME_ID NUMERIC,
    WORKFLOW_DEFINITION_ID NUMERIC,
    INACTIVE               NUMERIC DEFAULT 0 NOT NULL,
    PRIORITY_SCRIPT_ID     NUMERIC NOT NULL,
    WORKFLOW_TEMPLATE_ID   NUMERIC,
    RESOURCE_ID            VARCHAR2(36),
    DATA                   CLOB
) LOB (DATA) STORE AS WORKFLOW_DATA_LOB;

CREATE TABLE WORKFLOW_ARTIFACT_DELIVER (
    ID                    NUMERIC NOT NULL PRIMARY KEY,
    VERSION               NUMERIC DEFAULT 0 NOT NULL,
    WORKFLOW_TEMPLATE_ID  NUMERIC NOT NULL,
    ARTIFACT_SET_ID       NUMERIC NOT NULL,
    BASE_DIRECTORY        VARCHAR2(255),
    INCLUDE_PATTERNS      CLOB,
    EXCLUDE_PATTERNS      CLOB
) LOB (INCLUDE_PATTERNS) STORE AS WAD_IP_LOB,
 LOB (EXCLUDE_PATTERNS) STORE AS WAD_EP_LOB;

CREATE TABLE WORKFLOW_CASE (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    REQUEST_ID      NUMERIC,
    WORKFLOW_ID     NUMERIC,
    BUILD_LIFE_ID   NUMERIC,
    START_DATE      TIMESTAMP,
    END_DATE        TIMESTAMP,
    STATUS          VARCHAR2(20),
    PRIORITY        NUMERIC DEFAULT 0,
    PREFLIGHT       NUMERIC DEFAULT 0 NOT NULL
);

CREATE TABLE WORKFLOW_CASE_SELECTOR (
    ID              NUMERIC NOT NULL PRIMARY KEY,
    VERSION         NUMERIC DEFAULT 0 NOT NULL,
    NAME            VARCHAR2(255),
    DESCRIPTION     VARCHAR2(255),
    TYPE            VARCHAR2(255),
    SCRIPT          CLOB
) LOB (SCRIPT) STORE AS WCS_SCRIPT_LOB;

CREATE TABLE WORKFLOW_DEFINITION (
    ID                      NUMERIC NOT NULL PRIMARY KEY,
    VERSION                 NUMERIC DEFAULT 0 NOT NULL,
    NAME                    VARCHAR2(64) NOT NULL,
    DESCRIPTION             VARCHAR2(255),
    RESOURCE_ID             VARCHAR2(36)
);

CREATE TABLE WORKFLOW_DEFINITION_EDGES (
    FROM_WF_DEF_JOB_CONFIG_ID NUMERIC NOT NULL,
    TO_WF_DEF_JOB_CONFIG_ID NUMERIC NOT NULL,
    PRIMARY KEY (FROM_WF_DEF_JOB_CONFIG_ID, TO_WF_DEF_JOB_CONFIG_ID)
);

CREATE TABLE WORKFLOW_DEFINITION_JOB_CONFIG (
    ID                      NUMERIC NOT NULL,
    VERSION                 NUMERIC DEFAULT 0 NOT NULL,
    WORKFLOW_DEFINITION_ID  NUMERIC NOT NULL,
    JOB_CONFIG_ID           NUMERIC NOT NULL,
    PRE_CONDITION_SCRIPT_ID NUMERIC NOT NULL,
    AGENT_POOL_ID           NUMERIC,
    NO_AGENT                NUMERIC DEFAULT 0,
    WORK_DIR_SCRIPT_ID      NUMERIC,
    USE_PARENT_WORK_DIR     NUMERIC DEFAULT 0,
    USE_SOURCE_WORK_DIR_SCRIPT NUMERIC DEFAULT 0,
    IS_WORKFLOW_LOCK        NUMERIC DEFAULT 0,
    CLEANUP                 VARCHAR2(10),
    INACTIVE                NUMERIC DEFAULT 0,
    ITERATION_TYPE          VARCHAR2(32),
    ITERATIONS              NUMERIC DEFAULT 0,
    IS_PARALLEL             NUMERIC DEFAULT 0,
    MAX_PARALLEL_JOBS       NUMERIC DEFAULT -1,
    RUN_ITR_ON_UNIQUE_AGENTS NUMERIC DEFAULT 0,
    REQUIRE_ALL_AGENTS      NUMERIC DEFAULT 0,
    ITERATION_PROPERTY_NAME VARCHAR2(255),
    AGENT_PROP              VARCHAR2(255),
    PRIMARY KEY (ID)
);

CREATE TABLE WORKFLOW_DEF_JOB_ITR_NAME (
    WORKFLOW_DEF_JOB_CONFIG_ID NUMERIC NOT NULL,
    ITERATION               NUMERIC NOT NULL,
    NAME                    VARCHAR2(255)
);

CREATE TABLE WORKFLOW_DEF_JOB_ITR_PROP (
    WORKFLOW_DEF_JOB_CONFIG_ID NUMERIC NOT NULL,
    ITERATION               NUMERIC NOT NULL,
    PROPERTY_NAME           VARCHAR2(255),
    VALUE                   VARCHAR2(400),
    LONG_VALUE              CLOB
) LOB (LONG_VALUE) STORE AS WDJIP_LV_LOB;

CREATE TABLE WORKFLOW_LOCK_RES_REF (
    WORKFLOW_TEMPLATE_ID     NUMERIC NOT NULL,
    SEQ             NUMERIC NOT NULL,
    IS_EXCLUSIVE    NUMERIC DEFAULT 0,
    LOCK_RES_ID     NUMERIC,
    SCRIPT          CLOB,
    PRIMARY KEY (WORKFLOW_TEMPLATE_ID, SEQ)
) LOB (SCRIPT) STORE AS WLRR_SCRIPT_LOB;

CREATE TABLE WORKFLOW_PRIORITY_SCRIPT (
    ID                    NUMERIC NOT NULL PRIMARY KEY,
    VERSION               NUMERIC DEFAULT 0 NOT NULL,
    NAME                  VARCHAR2(255) NOT NULL,
    DESCRIPTION           VARCHAR2(255),
    LANGUAGE              VARCHAR2(64),
    SCRIPT                CLOB NOT NULL,
    CAN_DELETE            NUMERIC DEFAULT 1 NOT NULL,
    INACTIVE              NUMERIC DEFAULT 0 NOT NULL
) LOB (SCRIPT) STORE AS WPS_SCRIPT_LOB;

CREATE TABLE WORKFLOW_PROP (
    WORKFLOW_ID       NUMERIC NOT NULL,
    NAME              VARCHAR2(255) NOT NULL,
    VALUE             VARCHAR2(400),
    LONG_VALUE        CLOB,
    SECURE            NUMERIC DEFAULT 0 NOT NULL,
    PRIMARY KEY (WORKFLOW_ID, NAME)
) LOB (LONG_VALUE) STORE AS WP_LV_LOB;

CREATE TABLE WORKFLOW_TEMPLATE (
    ID                     NUMERIC NOT NULL PRIMARY KEY,
    VERSION                NUMERIC DEFAULT 0 NOT NULL,
    NAME                   VARCHAR2(255) NOT NULL,
    DESCRIPTION            VARCHAR2(4000),
    WORKFLOW_DEFINITION_ID NUMERIC NOT NULL,
    IS_ORIGINATING         NUMERIC NOT NULL,
    INACTIVE               NUMERIC DEFAULT 0 NOT NULL,
    RESOURCE_ID            VARCHAR2(36)
);

CREATE TABLE WORKFLOW_TRIGGER (
    ID               NUMERIC NOT NULL PRIMARY KEY,
    VERSION          NUMERIC DEFAULT 0 NOT NULL,
    CLASS            VARCHAR2(255),
    DATA             CLOB,
    WORKFLOW_ID      NUMERIC,
    PRIORITY         NUMERIC DEFAULT 0,
    IS_ENABLED       NUMERIC DEFAULT 1 NOT NULL
) LOB (DATA) STORE AS WT_DATA_LOB;
-- Licensed Materials - Property of IBM Corp.
-- IBM UrbanCode Build
-- IBM UrbanCode Deploy
-- IBM UrbanCode Release
-- IBM AnthillPro
-- (c) Copyright IBM Corporation 2002, 2014. All Rights Reserved.
--
-- U.S. Government Users Restricted Rights - Use, duplication or disclosure restricted by
-- GSA ADP Schedule Contract with IBM Corp.

create table ps_prop_sheet_group (
    id varchar2(36) not null primary key,
    version numeric default 0 not null
);


create table ps_prop_sheet_def (
    id varchar2(36) not null primary key,
    version numeric default 0 not null,
    name varchar2(255),
    description varchar2(4000),
    prop_sheet_group_id varchar2(36),
    template_handle varchar2(255),
    template_prop_sheet_def_id varchar2(36)
);


create table ps_prop_def (
    id varchar2(36) not null primary key,
    version numeric default 0 not null,
    prop_sheet_def_id varchar2(36) not null,
    name varchar2(255) not null,
    description varchar2(4000),
    label varchar2(255),
    default_value varchar2(4000),
    long_default_value clob,
    property_type varchar2(64),
    required varchar2(1) not null,
    hidden varchar2(1) not null,
    index_order numeric,
    allowed_prop_sheet_def_id varchar2(36),
    pattern varchar2(255)
) lob (long_default_value) store as ps_prop_default_value_lob;


create table ps_prop_def_allowed_value (
    id varchar2(36) not null primary key,
    version numeric default 0 not null,
    prop_def_id varchar2(36) not null,
    value varchar2(4000) not null,
    label varchar2(255),
    index_order numeric
);


create table ps_prop_sheet_handle (
    id varchar2(36) not null primary key,
    version numeric default 0 not null,
    prop_sheet_handle varchar2(255) not null,
    prop_sheet_def_id varchar2(36) not null
);


create table ps_prop_sheet (
    id varchar2(36) not null primary key,
    version numeric default 0 not null,
    name varchar2(255),
    prop_sheet_group_id varchar2(36),
    prop_sheet_def_id varchar2(36),
    prop_sheet_def_handle varchar2(255),
    template_prop_sheet_id varchar2(36),
    template_handle varchar2(255)
);


create table ps_prop_value (
    id varchar2(36) not null primary key,
    version numeric default 0 not null,
    name varchar2(255) not null,
    value varchar2(4000),
    long_value clob,
    description varchar2(4000),
    secure varchar2(1),
    prop_sheet_id varchar2(36) not null
) lob (long_value) store as ps_prop_value_lob;


create table ps_db_version (
    release_name  varchar2(255) not null,
    ver           numeric default 0 not null
);
-- licensed materials - property of ibm corp.
-- ibm urbancode build
-- (c) copyright ibm corporation 2012, 2014. all rights reserved.
--
-- u.s. government users restricted rights - use, duplication or disclosure restricted by
-- gsa adp schedule contract with ibm corp.
create table pl_plugin (
    id varchar2(36) not null primary key,
    version integer default 0 not null,
    plugin_type varchar2(32) not null,
    name varchar2(256) not null,
    tag varchar2(256) not null,
    description varchar2(4000),
    plugin_id varchar2(255) not null,
    plugin_version integer not null,
    release_version varchar2(256),
    plugin_hash varchar2(256) not null,
    prop_sheet_group_id varchar2(36) not null,
    constraint pl_plugin_uc unique(plugin_id, plugin_version)
);
create index pl_plugin_plugin_id on pl_plugin(plugin_id);
create index pl_plugin_prop_sheet_group_id on pl_plugin(prop_sheet_group_id);

create table pl_plugin_command (
    id varchar2(36) not null primary key,
    version integer default 0 not null,
    name varchar2(255) not null,
    description varchar2(4000),
    plugin_id varchar2(36) not null,
    command_type varchar2(36),
    prop_sheet_def_id varchar2(36) not null,
    validation_script_lang varchar2(32),
    validation_script_content clob,
    post_processing_script clob,
    constraint pl_plugin_command_uc unique(plugin_id, name)
) lob (validation_script_content) store as ppc_vsc_lob,
 lob (post_processing_script) store as ppc_pps_lob;
create index pl_plg_cmd_plugin_id on pl_plugin_command(plugin_id);
create index pl_plg_cmd_prop_sheet_def_id on pl_plugin_command(prop_sheet_def_id);

create table pl_db_version (
    release_name  varchar2(256) not null,
    ver           integer default 0 not null
);
-- LICENSED MATERIALS - PROPERTY OF IBM CORP.
-- IBM URBANCODE BUILD
-- (C) COPYRIGHT IBM CORPORATION 2012, 2014. ALL RIGHTS RESERVED.
--
-- U.S. GOVERNMENT USERS RESTRICTED RIGHTS - USE, DUPLICATION OR DISCLOSURE RESTRICTED BY
-- GSA ADP SCHEDULE CONTRACT WITH IBM CORP.
CREATE TABLE REP_FACT_TABLE (
    ID VARCHAR2(36) NOT NULL,
    NAME VARCHAR2(30) NOT NULL,
    DISPLAY_NAME VARCHAR2(100),
    DESCRIPTION VARCHAR2(4000),
    PRIMARY KEY (ID)
);

CREATE TABLE REP_FACT_TABLE_COLUMN (
    FACT_TABLE_ID VARCHAR2(36) NOT NULL,
    NAME VARCHAR2(30) NOT NULL,
    DISPLAY_NAME VARCHAR2(100),
    DESCRIPTION VARCHAR2(4000),
    NULLABLE NUMERIC DEFAULT 1 NOT NULL,
    DIMENSION_ID VARCHAR2(36),
    PRIMARY KEY (FACT_TABLE_ID, NAME)
);

CREATE TABLE REP_DIMENSION (
    ID VARCHAR2(36) NOT NULL,
    NAME VARCHAR2(30) NOT NULL,
    DISPLAY_NAME VARCHAR2(100),
    DESCRIPTION VARCHAR2(4000),
    MUTABLE NUMERIC,
    PRIMARY KEY (ID)
);

CREATE TABLE REP_DIMENSION_COLUMN (
    PARENT_ID VARCHAR2(36) NOT NULL,
    NAME VARCHAR2(30) NOT NULL,
    DISPLAY_NAME VARCHAR2(100),
    DESCRIPTION VARCHAR2(4000),
    NULLABLE NUMERIC DEFAULT 1 NOT NULL,
    PRIMARY_KEY NUMERIC DEFAULT 0 NOT NULL,
    DIMENSION_ID VARCHAR2(36),
    PRIMARY KEY (PARENT_ID, NAME)
);

CREATE TABLE REP_REPORT (
    ID VARCHAR2(36) NOT NULL,
    NAME VARCHAR2(100) NOT NULL,
    DESCRIPTION VARCHAR2(4000),
    RESOURCE_ID VARCHAR2(36),
    QUERY CLOB NOT NULL,
    OUTPUT_CONFIG CLOB,
    PRIMARY KEY (ID)
) LOB (QUERY) STORE AS RR_QUERY_LOB,
LOB (OUTPUT_CONFIG) STORE AS RR_OC_LOB;

CREATE TABLE REPORT_DB_VERSION (
    RELEASE_NAME  VARCHAR2(255) NOT NULL,
    VER           NUMERIC DEFAULT 0 NOT NULL
);
-- licensed materials - property of ibm corp.
-- ibm urbancode build
-- ibm urbancode deploy
-- ibm urbancode release
-- ibm anthillpro
-- (c) copyright ibm corporation 2002, 2014. all rights reserved.
--
-- u.s. government users restricted rights - use, duplication or disclosure restricted by
-- gsa adp schedule contract with ibm corp.
-- ============================================================================
--  versioning table
-- ============================================================================

create table sec_db_version (
    release_name varchar2(36) not null,
    ver integer default 0 not null
);

insert into sec_db_version (release_name, ver) values ('1.0', 21);

-- ============================================================================
--  security tables
-- ============================================================================

create table sec_action (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(64) not null,
    description varchar2(1024),
    enabled varchar2(1) default 'y' not null,
    cascading varchar2(1) default 'n' not null,
    sec_resource_type_id varchar2(36) not null,
    category varchar2(64),
    primary key (id)
);

create table sec_auth_token (
    id varchar2(36) not null,
    version integer default 0 not null,
    sec_user_id varchar2(36) not null,
    token varchar2(255) not null,
    expiration numeric not null,
    description varchar2(1024),
    os_user varchar2(255),
    host varchar2(255),
    primary key (id)
);

create table sec_authentication_realm (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(64) not null,
    description varchar2(1024),
    sort_order integer not null,
    enabled varchar2(1) default 'n' not null,
    read_only varchar2(1) default 'n' not null,
    login_module varchar2(1024) not null,
    sec_authorization_realm_id varchar2(36) not null,
    ghosted_date numeric default 0 not null,
    allowed_attempts integer default 0 not null,
    primary key (id)
);

create table sec_authentication_realm_prop (
    sec_authentication_realm_id varchar2(36) not null,
    name varchar2(1024) not null,
    value varchar2(4000)
);

create table sec_authorization_realm (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(64) not null,
    description varchar2(1024),
    authorization_module varchar2(1024) not null,
    primary key (id)
);

create table sec_authorization_realm_prop (
    sec_authorization_realm_id varchar2(36) not null,
    name varchar2(1024) not null,
    value varchar2(4000)
);

create table sec_group (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(255) not null,
    sec_authorization_realm_id varchar2(36) not null,
    enabled varchar2(1) default 'y' not null,
    primary key (id)
);

create table sec_group_mapper (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(64) not null unique,
    primary key (id)
);

create table sec_group_mapping (
    id varchar2(36) not null,
    version integer default 0 not null,
    sec_group_mapper_id varchar2(36) not null,
    regex varchar2(255) not null,
    replacement varchar2(255) not null,
    primary key (id)
);

create table sec_group_role_on_team (
    id varchar2(36) not null,
    version integer default 0 not null,
    sec_group_id varchar2(36) not null,
    sec_role_id varchar2(36) not null,
    sec_team_space_id varchar2(36) not null,
    primary key (id)
);

create table sec_internal_user (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(64) not null,
    password varchar2(128) not null,
    encoded smallint default 0 not null,
    primary key (id)
);

create table sec_resource (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(255) not null,
    enabled varchar2(1) default 'y' not null,
    sec_resource_type_id varchar2(36) not null,
    primary key (id)
);

create table sec_resource_for_team (
    id varchar2(36) not null,
    version integer default 0 not null,
    sec_resource_id varchar2(36) not null,
    sec_team_space_id varchar2(36) not null,
    sec_resource_role_id varchar2(36),
    primary key (id)
);

create table sec_resource_hierarchy (
    parent_sec_resource_id varchar2(36) not null,
    child_sec_resource_id varchar2(36) not null,
    path_length integer not null,
    primary key (parent_sec_resource_id, child_sec_resource_id)
);

create table sec_resource_role (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(255) not null,
    description varchar2(1024),
    enabled varchar2(1) default 'y' not null,
    sec_resource_type_id varchar2(36) not null,
    primary key (id)
);

create table sec_resource_type (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(255) not null,
    enabled varchar2(1) default 'y' not null,
    primary key (id)
);

create table sec_role (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(255) not null,
    description varchar2(1024),
    enabled varchar2(1) default 'y' not null,
    primary key (id)
);

create table sec_role_action (
    id varchar2(36) not null,
    version integer default 0 not null,
    sec_role_id varchar2(36) not null,
    sec_action_id varchar2(36) not null,
    sec_resource_role_id varchar2(36),
    primary key (id)
);

create table sec_team_space (
    id varchar2(36) not null,
    version integer default 0 not null,
    enabled varchar2(1) default 'y' not null,
    name varchar2(255) not null,
    description varchar2(4000),
    primary key (id)
);

create table sec_user (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(255) not null,
    enabled varchar2(1) default 'y' not null,
    password varchar2(255),
    actual_name varchar2(255),
    email varchar2(255),
    im_id varchar2(255),
    sec_authentication_realm_id varchar2(36) not null,
    ghosted_date numeric default 0 not null,
    failed_attempts integer default 0 not null,
    sec_license_type_id_requested varchar2(36),
    sec_license_type_id_received varchar2(36),
    licensed_session_count integer default 0 not null,
    primary key (id)
);

create table sec_user_property (
    id varchar2(36) not null,
    version integer default 0 not null,
    name varchar2(255) not null,
    value varchar2(4000),
    sec_user_id varchar2(36) not null,
    primary key (id)
);

create table sec_user_role_on_team (
    id varchar2(36) not null,
    version integer default 0 not null,
    sec_user_id varchar2(36) not null,
    sec_role_id varchar2(36) not null,
    sec_team_space_id varchar2(36) not null,
    primary key (id)
);

create table sec_user_to_group (
    sec_user_id varchar2(36) not null,
    sec_group_id varchar2(36) not null
);

create table sec_license_type (
     id varchar2(36) not null,
     version integer default 0 not null,
     feature varchar2(36) not null,
     is_reservable varchar2(1) default 'n' not null,
     primary key (id));
     
create table sec_action_to_license_type (
    action_id varchar2(36) not null,
    license_type_id varchar2(36) not null
);
-- Licensed Materials - Property of IBM Corp.
-- IBM UrbanCode Build
-- IBM UrbanCode Deploy
-- IBM UrbanCode Release
-- IBM AnthillPro
-- (c) Copyright IBM Corporation 2002, 2014. All Rights Reserved.
--
-- U.S. Government Users Restricted Rights - Use, duplication or disclosure restricted by
-- GSA ADP Schedule Contract with IBM Corp.
create table wf_db_version (
    release_name varchar2(256) not null,
    ver integer default 0 not null
);

create table wf_workflow (
    id varchar2(36) not null primary key,  
    workflow_data blob not null
);

create table wf_dispatched_task (
    id varchar2(36) not null primary key,
    workflow_id varchar2(36) not null,
    context_id varchar2(36) not null,
    dispatched varchar2(1) not null,
    method_name varchar2(128) not null,
    priority integer not null,
    method_data blob
) lob (method_data) store as wf_dt_method_data_lob;

create table wf_workflow_trace (
    id varchar2(36) not null primary key,
    workflow_trace_data clob not null
) lob (workflow_trace_data) store as workflow_trace_data_lob;


create index wf_disp_task_wfid on wf_dispatched_task(workflow_id);
